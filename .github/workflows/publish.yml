name: Publish to GitHub NPM Registry

on:
  push:
    branches:
      - main
    paths:
      - 'package.json'
      - 'src/**'
      - '.github/workflows/publish.yml'
  workflow_dispatch:

permissions:
  contents: write
  packages: write
  actions: read

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          registry-url: 'https://npm.pkg.github.com'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test -- --passWithNoTests

      - name: Lint code
        run: npm run lint

      - name: Build package
        run: npm run build

      - name: Get package info
        id: package_info
        run: |
          echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT
          echo "name=$(node -p "require('./package.json').name")" >> $GITHUB_OUTPUT

      - name: Check if version exists
        id: check_version
        run: |
          if npm view ${{ steps.package_info.outputs.name }}@${{ steps.package_info.outputs.version }} > /dev/null 2>&1; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure npm registry
        if: steps.check_version.outputs.exists == 'false'
        run: |
          echo "@lazy-panda-ui:registry=https://npm.pkg.github.com" >> ~/.npmrc
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}" >> ~/.npmrc

      - name: Publish to GitHub Packages
        if: steps.check_version.outputs.exists == 'false'
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Git Tag
        if: success() && steps.check_version.outputs.exists == 'false'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git tag "v${{ steps.package_info.outputs.version }}"
          git push origin "v${{ steps.package_info.outputs.version }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Output success message
        if: steps.check_version.outputs.exists == 'false'
        run: |
          echo "‚úÖ Successfully published ${{ steps.package_info.outputs.name }}@${{ steps.package_info.outputs.version }} to GitHub Packages"
          echo "üì¶ Package URL: https://github.com/${{ github.repository }}/packages"
          
      - name: Skip publishing message
        if: steps.check_version.outputs.exists == 'true'
        run: |
          echo "‚ö†Ô∏è Version ${{ steps.package_info.outputs.version }} already exists, skipping publish"
