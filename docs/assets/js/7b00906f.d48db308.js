"use strict";(self.webpackChunktemp_docs=self.webpackChunktemp_docs||[]).push([[455],{676:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>h,frontMatter:()=>l,metadata:()=>t,toc:()=>o});const t=JSON.parse('{"id":"components/feedback/alert","title":"Alert","description":"The Alert component is used to display important messages or feedback to users. It supports different types of alerts for various scenarios like success, error, warning, and info messages.","source":"@site/docs/components/feedback/alert.mdx","sourceDirName":"components/feedback","slug":"/components/feedback/alert","permalink":"/lazy-panda-ui/components/feedback/alert","draft":false,"unlisted":false,"editUrl":"https://github.com/lazy-panda-ui/lazy-panda-ui/tree/main/temp-docs/docs/components/feedback/alert.mdx","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Tooltip","permalink":"/lazy-panda-ui/components/data-display/tooltip"},"next":{"title":"Dialog","permalink":"/lazy-panda-ui/components/feedback/dialog"}}');var i=s(4848),r=s(8453);const l={},d="Alert",c={},o=[{value:"Import",id:"import",level:2},{value:"Usage",id:"usage",level:2},{value:"Basic Alert",id:"basic-alert",level:3},{value:"Different Types",id:"different-types",level:3},{value:"Dismissible Alert",id:"dismissible-alert",level:3},{value:"With Custom Icon",id:"with-custom-icon",level:3},{value:"Props",id:"props",level:2},{value:"Main Props",id:"main-props",level:3},{value:"Style Props",id:"style-props",level:3},{value:"Accessibility Props",id:"accessibility-props",level:3},{value:"Theme Customization",id:"theme-customization",level:2}];function a(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"alert",children:"Alert"})}),"\n",(0,i.jsx)(n.p,{children:"The Alert component is used to display important messages or feedback to users. It supports different types of alerts for various scenarios like success, error, warning, and info messages."}),"\n",(0,i.jsx)(n.h2,{id:"import",children:"Import"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"import { Alert } from '@lazy-panda-ui/lazy-panda-ui';\n"})}),"\n",(0,i.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,i.jsx)(n.h3,{id:"basic-alert",children:"Basic Alert"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"import { Alert } from '@lazy-panda-ui/lazy-panda-ui';\n\nfunction Example() {\n  return (\n    <Alert message=\"This is a basic info alert\" />\n  );\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"different-types",children:"Different Types"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:'import { Alert } from \'@lazy-panda-ui/lazy-panda-ui\';\n\nfunction Example() {\n  return (\n    <>\n      <Alert \n        type="success"\n        message="Operation completed successfully"\n      />\n      \n      <Alert \n        type="error"\n        message="An error occurred"\n      />\n      \n      <Alert \n        type="warning"\n        message="Please proceed with caution"\n      />\n      \n      <Alert \n        type="info"\n        message="Here\'s some useful information"\n      />\n    </>\n  );\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"dismissible-alert",children:"Dismissible Alert"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"import { Alert } from '@lazy-panda-ui/lazy-panda-ui';\n\nfunction Example() {\n  const handleDismiss = () => {\n    console.log('Alert dismissed');\n  };\n\n  return (\n    <Alert\n      message=\"This alert can be dismissed\"\n      type=\"info\"\n      dismissible\n      onDismiss={handleDismiss}\n    />\n  );\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"with-custom-icon",children:"With Custom Icon"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:'import { Alert } from \'@lazy-panda-ui/lazy-panda-ui\';\nimport { Icon } from \'your-icon-library\';\n\nfunction Example() {\n  return (\n    <Alert\n      message="Alert with custom icon"\n      icon={<Icon name="bell" />}\n      type="info"\n    />\n  );\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"props",children:"Props"}),"\n",(0,i.jsx)(n.h3,{id:"main-props",children:"Main Props"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Prop"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Default"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"message"})}),(0,i.jsx)(n.td,{children:"string"}),(0,i.jsx)(n.td,{children:"Required"}),(0,i.jsx)(n.td,{children:"The message to display"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"type"})}),(0,i.jsx)(n.td,{children:"'success' | 'info' | 'warning' | 'error'"}),(0,i.jsx)(n.td,{children:"'info'"}),(0,i.jsx)(n.td,{children:"The type of alert"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"icon"})}),(0,i.jsx)(n.td,{children:"React.ReactNode"}),(0,i.jsx)(n.td,{children:"-"}),(0,i.jsx)(n.td,{children:"Custom icon to display"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"dismissible"})}),(0,i.jsx)(n.td,{children:"boolean"}),(0,i.jsx)(n.td,{children:"false"}),(0,i.jsx)(n.td,{children:"Whether the alert can be dismissed"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"onDismiss"})}),(0,i.jsx)(n.td,{children:"() => void"}),(0,i.jsx)(n.td,{children:"-"}),(0,i.jsx)(n.td,{children:"Called when alert is dismissed"})]})]})]}),"\n",(0,i.jsx)(n.h3,{id:"style-props",children:"Style Props"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Prop"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"containerStyle"})}),(0,i.jsx)(n.td,{children:"ViewStyle"}),(0,i.jsx)(n.td,{children:"Additional styles for the container"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"contentStyle"})}),(0,i.jsx)(n.td,{children:"ViewStyle"}),(0,i.jsx)(n.td,{children:"Additional styles for the content wrapper"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"messageStyle"})}),(0,i.jsx)(n.td,{children:"TextStyle"}),(0,i.jsx)(n.td,{children:"Additional styles for the message text"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"iconStyle"})}),(0,i.jsx)(n.td,{children:"ViewStyle"}),(0,i.jsx)(n.td,{children:"Additional styles for the icon wrapper"})]})]})]}),"\n",(0,i.jsx)(n.h3,{id:"accessibility-props",children:"Accessibility Props"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Prop"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"accessibilityRole"})}),(0,i.jsx)(n.td,{children:"AccessibilityRole"}),(0,i.jsx)(n.td,{children:"Role for screen readers"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"accessibilityLabel"})}),(0,i.jsx)(n.td,{children:"string"}),(0,i.jsx)(n.td,{children:"Accessibility label"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"testID"})}),(0,i.jsx)(n.td,{children:"string"}),(0,i.jsx)(n.td,{children:"Test ID for testing"})]})]})]}),"\n",(0,i.jsx)(n.h2,{id:"theme-customization",children:"Theme Customization"}),"\n",(0,i.jsx)(n.p,{children:"You can customize the Alert component through the theme:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"const theme = {\n  components: {\n    alert: {\n      container: {\n        // base container styles\n      },\n      content: {\n        // content wrapper styles\n      },\n      iconContainer: {\n        // icon wrapper styles\n      },\n      text: {\n        // message text styles\n      },\n      dismissButton: {\n        // dismiss button styles\n      },\n      dismissIcon: {\n        // dismiss icon styles\n      },\n      variants: {\n        success: {\n          container: {\n            backgroundColor: 'rgba(52, 199, 89, 0.1)',\n            borderColor: 'rgba(52, 199, 89, 0.3)',\n          },\n          text: {\n            color: '#2A7D47',\n          },\n        },\n        // Similar customizations for info, warning, and error variants\n      },\n    },\n  },\n};\n"})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>d});var t=s(6540);const i={},r=t.createContext(i);function l(e){const n=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);