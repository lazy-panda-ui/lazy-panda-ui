"use strict";(self.webpackChunktemp_docs=self.webpackChunktemp_docs||[]).push([[741],{4645:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>l,contentTitle:()=>d,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"components/inputs/button-group","title":"ButtonGroup","description":"The ButtonGroup component is used to group related buttons together. It\'s perfect for creating segmented controls, toggle groups, or any set of related actions.","source":"@site/docs/components/inputs/button-group.mdx","sourceDirName":"components/inputs","slug":"/components/inputs/button-group","permalink":"/lazy-panda-ui/components/inputs/button-group","draft":false,"unlisted":false,"editUrl":"https://github.com/lazy-panda-ui/lazy-panda-ui/tree/main/temp-docs/docs/components/inputs/button-group.mdx","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Button","permalink":"/lazy-panda-ui/components/inputs/button"},"next":{"title":"Select","permalink":"/lazy-panda-ui/components/inputs/select"}}');var o=t(4848),r=t(8453);const i={},d="ButtonGroup",l={},c=[{value:"Import",id:"import",level:2},{value:"Usage",id:"usage",level:2},{value:"Basic ButtonGroup",id:"basic-buttongroup",level:3},{value:"With Selected State",id:"with-selected-state",level:3},{value:"Different Variants",id:"different-variants",level:3},{value:"Different Sizes",id:"different-sizes",level:3},{value:"Vertical Direction",id:"vertical-direction",level:3},{value:"With Disabled Buttons",id:"with-disabled-buttons",level:3},{value:"Props",id:"props",level:2},{value:"Main Props",id:"main-props",level:3},{value:"Style Props",id:"style-props",level:3},{value:"Accessibility Props",id:"accessibility-props",level:3},{value:"Theme Customization",id:"theme-customization",level:2}];function a(n){const e={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...n.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.header,{children:(0,o.jsx)(e.h1,{id:"buttongroup",children:"ButtonGroup"})}),"\n",(0,o.jsx)(e.p,{children:"The ButtonGroup component is used to group related buttons together. It's perfect for creating segmented controls, toggle groups, or any set of related actions."}),"\n",(0,o.jsx)(e.h2,{id:"import",children:"Import"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-tsx",children:"import { ButtonGroup } from '@lazy-panda-ui/lazy-panda-ui';\n"})}),"\n",(0,o.jsx)(e.h2,{id:"usage",children:"Usage"}),"\n",(0,o.jsx)(e.h3,{id:"basic-buttongroup",children:"Basic ButtonGroup"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-tsx",children:"import { ButtonGroup } from '@lazy-panda-ui/lazy-panda-ui';\n\nfunction Example() {\n  const buttons = [\n    { label: 'Left', onPress: () => console.log('Left pressed') },\n    { label: 'Middle', onPress: () => console.log('Middle pressed') },\n    { label: 'Right', onPress: () => console.log('Right pressed') },\n  ];\n\n  return <ButtonGroup buttons={buttons} />;\n}\n"})}),"\n",(0,o.jsx)(e.h3,{id:"with-selected-state",children:"With Selected State"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-tsx",children:"import { ButtonGroup } from '@lazy-panda-ui/lazy-panda-ui';\n\nfunction Example() {\n  const [selectedIndex, setSelectedIndex] = useState(0);\n\n  const buttons = [\n    { label: 'Day', onPress: () => setSelectedIndex(0) },\n    { label: 'Week', onPress: () => setSelectedIndex(1) },\n    { label: 'Month', onPress: () => setSelectedIndex(2) },\n  ];\n\n  return (\n    <ButtonGroup\n      buttons={buttons}\n      selectedIndex={selectedIndex}\n    />\n  );\n}\n"})}),"\n",(0,o.jsx)(e.h3,{id:"different-variants",children:"Different Variants"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-tsx",children:"import { ButtonGroup } from '@lazy-panda-ui/lazy-panda-ui';\n\nfunction Example() {\n  const buttons = [\n    { label: 'One', onPress: () => {} },\n    { label: 'Two', onPress: () => {} },\n  ];\n\n  return (\n    <>\n      <ButtonGroup\n        buttons={buttons}\n        variant=\"outlined\"\n      />\n\n      <ButtonGroup\n        buttons={buttons}\n        variant=\"contained\"\n      />\n\n      <ButtonGroup\n        buttons={buttons}\n        variant=\"text\"\n      />\n    </>\n  );\n}\n"})}),"\n",(0,o.jsx)(e.h3,{id:"different-sizes",children:"Different Sizes"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-tsx",children:"import { ButtonGroup } from '@lazy-panda-ui/lazy-panda-ui';\n\nfunction Example() {\n  const buttons = [\n    { label: 'Small', onPress: () => {} },\n    { label: 'Small', onPress: () => {} },\n  ];\n\n  return (\n    <>\n      <ButtonGroup\n        buttons={buttons}\n        size=\"small\"\n      />\n\n      <ButtonGroup\n        buttons={buttons}\n        size=\"medium\"\n      />\n\n      <ButtonGroup\n        buttons={buttons}\n        size=\"large\"\n      />\n    </>\n  );\n}\n"})}),"\n",(0,o.jsx)(e.h3,{id:"vertical-direction",children:"Vertical Direction"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-tsx",children:"import { ButtonGroup } from '@lazy-panda-ui/lazy-panda-ui';\n\nfunction Example() {\n  const buttons = [\n    { label: 'Top', onPress: () => {} },\n    { label: 'Middle', onPress: () => {} },\n    { label: 'Bottom', onPress: () => {} },\n  ];\n\n  return (\n    <ButtonGroup\n      buttons={buttons}\n      direction=\"vertical\"\n    />\n  );\n}\n"})}),"\n",(0,o.jsx)(e.h3,{id:"with-disabled-buttons",children:"With Disabled Buttons"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-tsx",children:"import { ButtonGroup } from '@lazy-panda-ui/lazy-panda-ui';\n\nfunction Example() {\n  const buttons = [\n    { label: 'Enabled', onPress: () => {} },\n    { label: 'Disabled', onPress: () => {}, disabled: true },\n    { label: 'Enabled', onPress: () => {} },\n  ];\n\n  return <ButtonGroup buttons={buttons} />;\n}\n"})}),"\n",(0,o.jsx)(e.h2,{id:"props",children:"Props"}),"\n",(0,o.jsx)(e.h3,{id:"main-props",children:"Main Props"}),"\n",(0,o.jsxs)(e.table,{children:[(0,o.jsx)(e.thead,{children:(0,o.jsxs)(e.tr,{children:[(0,o.jsx)(e.th,{children:"Prop"}),(0,o.jsx)(e.th,{children:"Type"}),(0,o.jsx)(e.th,{children:"Default"}),(0,o.jsx)(e.th,{children:"Description"})]})}),(0,o.jsxs)(e.tbody,{children:[(0,o.jsxs)(e.tr,{children:[(0,o.jsx)(e.td,{children:(0,o.jsx)(e.code,{children:"buttons"})}),(0,o.jsx)(e.td,{children:(0,o.jsx)(e.code,{children:"ButtonConfig[]"})}),(0,o.jsx)(e.td,{children:"Required"}),(0,o.jsxs)(e.td,{children:["Array of button configurations. Each button has ",(0,o.jsx)(e.code,{children:"label"}),", ",(0,o.jsx)(e.code,{children:"onPress"}),", and optional ",(0,o.jsx)(e.code,{children:"disabled"})," props"]})]}),(0,o.jsxs)(e.tr,{children:[(0,o.jsx)(e.td,{children:(0,o.jsx)(e.code,{children:"selectedIndex"})}),(0,o.jsx)(e.td,{children:(0,o.jsx)(e.code,{children:"number"})}),(0,o.jsx)(e.td,{children:"-"}),(0,o.jsx)(e.td,{children:"Index of the selected button"})]}),(0,o.jsxs)(e.tr,{children:[(0,o.jsx)(e.td,{children:(0,o.jsx)(e.code,{children:"variant"})}),(0,o.jsxs)(e.td,{children:[(0,o.jsx)(e.code,{children:'"outlined"'})," | ",(0,o.jsx)(e.code,{children:'"contained"'})," | ",(0,o.jsx)(e.code,{children:'"text"'})]}),(0,o.jsx)(e.td,{children:(0,o.jsx)(e.code,{children:'"outlined"'})}),(0,o.jsx)(e.td,{children:"Visual variant of the button group"})]}),(0,o.jsxs)(e.tr,{children:[(0,o.jsx)(e.td,{children:(0,o.jsx)(e.code,{children:"size"})}),(0,o.jsxs)(e.td,{children:[(0,o.jsx)(e.code,{children:'"small"'})," | ",(0,o.jsx)(e.code,{children:'"medium"'})," | ",(0,o.jsx)(e.code,{children:'"large"'})]}),(0,o.jsx)(e.td,{children:(0,o.jsx)(e.code,{children:'"medium"'})}),(0,o.jsx)(e.td,{children:"Size of the buttons"})]}),(0,o.jsxs)(e.tr,{children:[(0,o.jsx)(e.td,{children:(0,o.jsx)(e.code,{children:"direction"})}),(0,o.jsxs)(e.td,{children:[(0,o.jsx)(e.code,{children:'"horizontal"'})," | ",(0,o.jsx)(e.code,{children:'"vertical"'})]}),(0,o.jsx)(e.td,{children:(0,o.jsx)(e.code,{children:'"horizontal"'})}),(0,o.jsx)(e.td,{children:"Direction of the button group"})]}),(0,o.jsxs)(e.tr,{children:[(0,o.jsx)(e.td,{children:(0,o.jsx)(e.code,{children:"disabled"})}),(0,o.jsx)(e.td,{children:(0,o.jsx)(e.code,{children:"boolean"})}),(0,o.jsx)(e.td,{children:(0,o.jsx)(e.code,{children:"false"})}),(0,o.jsx)(e.td,{children:"Whether the entire button group is disabled"})]})]})]}),"\n",(0,o.jsx)(e.p,{children:"Where ButtonConfig is:"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-typescript",children:"interface ButtonConfig {\n  /** The text to display in the button */\n  label: string;\n  /** Function to call when button is pressed */\n  onPress: () => void;\n  /** Whether the button is disabled */\n  disabled?: boolean;\n}\n"})}),"\n",(0,o.jsx)(e.h3,{id:"style-props",children:"Style Props"}),"\n",(0,o.jsxs)(e.table,{children:[(0,o.jsx)(e.thead,{children:(0,o.jsxs)(e.tr,{children:[(0,o.jsx)(e.th,{children:"Prop"}),(0,o.jsx)(e.th,{children:"Type"}),(0,o.jsx)(e.th,{children:"Description"})]})}),(0,o.jsx)(e.tbody,{children:(0,o.jsxs)(e.tr,{children:[(0,o.jsx)(e.td,{children:(0,o.jsx)(e.code,{children:"style"})}),(0,o.jsx)(e.td,{children:(0,o.jsx)(e.code,{children:"object"})}),(0,o.jsx)(e.td,{children:"Additional styles for the container. Uses React Native ViewStyle"})]})})]}),"\n",(0,o.jsx)(e.h3,{id:"accessibility-props",children:"Accessibility Props"}),"\n",(0,o.jsxs)(e.table,{children:[(0,o.jsx)(e.thead,{children:(0,o.jsxs)(e.tr,{children:[(0,o.jsx)(e.th,{children:"Prop"}),(0,o.jsx)(e.th,{children:"Type"}),(0,o.jsx)(e.th,{children:"Description"})]})}),(0,o.jsx)(e.tbody,{children:(0,o.jsxs)(e.tr,{children:[(0,o.jsx)(e.td,{children:(0,o.jsx)(e.code,{children:"testID"})}),(0,o.jsx)(e.td,{children:(0,o.jsx)(e.code,{children:"string"})}),(0,o.jsx)(e.td,{children:"Test ID for testing"})]})})]}),"\n",(0,o.jsx)(e.h2,{id:"theme-customization",children:"Theme Customization"}),"\n",(0,o.jsx)(e.p,{children:"You can customize the ButtonGroup component through the theme:"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-tsx",children:"const theme = {\n  components: {\n    buttonGroup: {\n      container: {\n        // container styles\n      },\n      button: {\n        // individual button styles\n      },\n      selected: {\n        // selected button styles\n      },\n      disabled: {\n        // disabled button styles\n      },\n      variants: {\n        contained: {\n          backgroundColor: '#E3F2FD',  // example color\n        },\n        text: {\n          backgroundColor: 'transparent',\n        },\n        outlined: {\n          borderWidth: 1,\n          borderColor: '#BDBDBD',  // example color\n        },\n      },\n      sizes: {\n        small: {\n          padding: 8,  // example spacing\n        },\n        medium: {\n          padding: 16,  // example spacing\n        },\n        large: {\n          padding: 24,  // example spacing\n        },\n      },\n    },\n  },\n};\n"})})]})}function u(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(a,{...n})}):a(n)}},8453:(n,e,t)=>{t.d(e,{R:()=>i,x:()=>d});var s=t(6540);const o={},r=s.createContext(o);function i(n){const e=s.useContext(r);return s.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function d(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(o):n.components||o:i(n.components),s.createElement(r.Provider,{value:e},n.children)}}}]);