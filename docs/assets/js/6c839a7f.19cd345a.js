"use strict";(self.webpackChunktemp_docs=self.webpackChunktemp_docs||[]).push([[4120],{5771:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>i,contentTitle:()=>o,default:()=>h,frontMatter:()=>c,metadata:()=>d,toc:()=>l});const d=JSON.parse('{"id":"components/backdrop","title":"Backdrop","description":"The Backdrop component renders a full-screen overlay behind content. It\u2019s commonly used with modals, drawers, and menus.","source":"@site/docs/components/backdrop.mdx","sourceDirName":"components","slug":"/components/backdrop","permalink":"/lazy-panda-ui/components/backdrop","draft":false,"unlisted":false,"editUrl":"https://github.com/lazy-panda-ui/lazy-panda-ui/tree/main/temp-docs/docs/components/backdrop.mdx","tags":[],"version":"current","sidebarPosition":13,"frontMatter":{"sidebar_position":13}}');var s=r(4848),t=r(8453);const c={sidebar_position:13},o="Backdrop",i={},l=[{value:"Import",id:"import",level:2},{value:"Props",id:"props",level:2},{value:"Usage",id:"usage",level:2},{value:"Basic",id:"basic",level:3},{value:"Press to close",id:"press-to-close",level:3},{value:"Custom color and opacity",id:"custom-color-and-opacity",level:3},{value:"With content",id:"with-content",level:3},{value:"Theming",id:"theming",level:2}];function a(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"backdrop",children:"Backdrop"})}),"\n",(0,s.jsx)(n.p,{children:"The Backdrop component renders a full-screen overlay behind content. It\u2019s commonly used with modals, drawers, and menus."}),"\n",(0,s.jsx)(n.h2,{id:"import",children:"Import"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"import { Backdrop } from '@lazy-panda-ui/lazy-panda-ui';\n"})}),"\n",(0,s.jsx)(n.h2,{id:"props",children:"Props"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Name"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Default"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"open"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"boolean"})}),(0,s.jsx)(n.td,{children:"-"}),(0,s.jsx)(n.td,{children:"Controls visibility"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"style"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"StyleProp<ViewStyle>"})}),(0,s.jsx)(n.td,{children:"-"}),(0,s.jsx)(n.td,{children:"Container style override"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"children"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"React.ReactNode"})}),(0,s.jsx)(n.td,{children:"-"}),(0,s.jsx)(n.td,{children:"Render content inside the backdrop"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"color"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"string"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"theme.drawer.backdrop.color"})}),(0,s.jsx)(n.td,{children:"Base color for the overlay"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"opacity"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"number"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"theme.drawer.backdrop.opacity"})}),(0,s.jsx)(n.td,{children:"Alpha (0\u20131) for the overlay"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"onPress"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"() => void"})}),(0,s.jsx)(n.td,{children:"-"}),(0,s.jsx)(n.td,{children:"If provided, backdrop is pressable and triggers this callback"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"pointerEvents"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"'auto' | 'none' | 'box-none' | 'box-only'"})}),(0,s.jsx)(n.td,{children:"-"}),(0,s.jsx)(n.td,{children:"RN pointerEvents passthrough"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"testID"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"string"})}),(0,s.jsx)(n.td,{children:"-"}),(0,s.jsx)(n.td,{children:"Test identifier"})]})]})]}),"\n",(0,s.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,s.jsx)(n.h3,{id:"basic",children:"Basic"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"<Backdrop open>\n  {/* centered content by default */}\n  <Text style={{ color: '#fff' }}>Loading\u2026</Text>\n  <ActivityIndicator color=\"#fff\" />\n  {/* ... */}\n  {/* The layout is centered; override with style if needed. */}\n</Backdrop>\n"})}),"\n",(0,s.jsx)(n.h3,{id:"press-to-close",children:"Press to close"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"const [open, setOpen] = React.useState(false);\n\n<>\n  <Button onPress={() => setOpen(true)}>Open</Button>\n  <Backdrop open={open} onPress={() => setOpen(false)} />\n</>\n"})}),"\n",(0,s.jsx)(n.h3,{id:"custom-color-and-opacity",children:"Custom color and opacity"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:'<Backdrop open color="#000000" opacity={0.7} />\n'})}),"\n",(0,s.jsx)(n.h3,{id:"with-content",children:"With content"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:'<Backdrop open>\n  <Card>\n    <Text>Processing your request</Text>\n    <Progress variant="indeterminate" />\n  </Card>\n  {/* You can also pass pointerEvents to control interaction routing */}\n</Backdrop>\n'})}),"\n",(0,s.jsx)(n.h2,{id:"theming",children:"Theming"}),"\n",(0,s.jsx)(n.p,{children:"Backdrop uses the theme\u2019s drawer backdrop tokens:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"theme.drawer.backdrop = {\n  color: '#000000',\n  opacity: 0.5,\n};\n"})}),"\n",(0,s.jsx)(n.p,{children:"Override via ThemeProvider if you want a different default overlay across the app."})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>c,x:()=>o});var d=r(6540);const s={},t=d.createContext(s);function c(e){const n=d.useContext(t);return d.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),d.createElement(t.Provider,{value:n},e.children)}}}]);