"use strict";(self.webpackChunktemp_docs=self.webpackChunktemp_docs||[]).push([[6796],{378:(n,t,e)=>{e.r(t),e.d(t,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"components/toast","title":"Toast","description":"The Toast component displays brief, temporary notifications or messages that automatically disappear after a set time. It\'s ideal for showing feedback about an operation without interrupting the user\'s workflow.","source":"@site/docs/components/toast.mdx","sourceDirName":"components","slug":"/components/toast","permalink":"/lazy-panda-ui/components/toast","draft":false,"unlisted":false,"editUrl":"https://github.com/lazy-panda-ui/lazy-panda-ui/tree/main/temp-docs/docs/components/toast.mdx","tags":[],"version":"current","sidebarPosition":22,"frontMatter":{"sidebar_position":22},"sidebar":"tutorialSidebar","previous":{"title":"TextField","permalink":"/lazy-panda-ui/components/text-field"},"next":{"title":"Tooltip","permalink":"/lazy-panda-ui/components/tooltip"}}');var o=e(4848),i=e(8453);const r={sidebar_position:22},c="Toast",a={},l=[{value:"Import",id:"import",level:2},{value:"Usage",id:"usage",level:2},{value:"Props",id:"props",level:2},{value:"Examples",id:"examples",level:2},{value:"Basic Toasts",id:"basic-toasts",level:3},{value:"Different Positions",id:"different-positions",level:3},{value:"Custom Duration",id:"custom-duration",level:3},{value:"With Custom Icon",id:"with-custom-icon",level:3},{value:"With Action",id:"with-action",level:3},{value:"Promise Toast",id:"promise-toast",level:3},{value:"Customization",id:"customization",level:2},{value:"Custom Styles",id:"custom-styles",level:3},{value:"Custom Component",id:"custom-component",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"API Reference",id:"api-reference",level:2},{value:"Toast Function Options",id:"toast-function-options",level:3},{value:"Theme Customization",id:"theme-customization",level:3},{value:"Related Components",id:"related-components",level:2}];function d(n){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...n.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"toast",children:"Toast"})}),"\n",(0,o.jsx)(t.p,{children:"The Toast component displays brief, temporary notifications or messages that automatically disappear after a set time. It's ideal for showing feedback about an operation without interrupting the user's workflow."}),"\n",(0,o.jsx)(t.h2,{id:"import",children:"Import"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-tsx",children:"import { Toast, useToast } from '@lazy-panda-ui/lazy-panda-ui';\n"})}),"\n",(0,o.jsx)(t.h2,{id:"usage",children:"Usage"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-tsx",children:"import React from 'react';\nimport { useToast, Button } from '@lazy-panda-ui/lazy-panda-ui';\n\nfunction MyComponent() {\n  const toast = useToast();\n\n  return (\n    <Button\n      onClick={() => \n        toast({\n          title: 'Success',\n          description: 'Operation completed',\n          status: 'success',\n        })\n      }\n    >\n      Show Toast\n    </Button>\n  );\n}\n"})}),"\n",(0,o.jsx)(t.h2,{id:"props",children:"Props"}),"\n",(0,o.jsxs)(t.table,{children:[(0,o.jsx)(t.thead,{children:(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.th,{children:"Name"}),(0,o.jsx)(t.th,{children:"Type"}),(0,o.jsx)(t.th,{children:"Default"}),(0,o.jsx)(t.th,{children:"Description"})]})}),(0,o.jsxs)(t.tbody,{children:[(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:(0,o.jsx)(t.code,{children:"title"})}),(0,o.jsx)(t.td,{children:(0,o.jsx)(t.code,{children:"string"})}),(0,o.jsx)(t.td,{children:"-"}),(0,o.jsx)(t.td,{children:"Toast title"})]}),(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:(0,o.jsx)(t.code,{children:"description"})}),(0,o.jsx)(t.td,{children:(0,o.jsx)(t.code,{children:"string"})}),(0,o.jsx)(t.td,{children:"-"}),(0,o.jsx)(t.td,{children:"Toast description"})]}),(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:(0,o.jsx)(t.code,{children:"status"})}),(0,o.jsx)(t.td,{children:(0,o.jsx)(t.code,{children:"'info' | 'success' | 'warning' | 'error'"})}),(0,o.jsx)(t.td,{children:(0,o.jsx)(t.code,{children:"'info'"})}),(0,o.jsx)(t.td,{children:"Toast status"})]}),(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:(0,o.jsx)(t.code,{children:"duration"})}),(0,o.jsx)(t.td,{children:(0,o.jsx)(t.code,{children:"number"})}),(0,o.jsx)(t.td,{children:(0,o.jsx)(t.code,{children:"3000"})}),(0,o.jsx)(t.td,{children:"Duration in milliseconds"})]}),(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:(0,o.jsx)(t.code,{children:"isClosable"})}),(0,o.jsx)(t.td,{children:(0,o.jsx)(t.code,{children:"boolean"})}),(0,o.jsx)(t.td,{children:(0,o.jsx)(t.code,{children:"true"})}),(0,o.jsx)(t.td,{children:"Show close button"})]}),(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:(0,o.jsx)(t.code,{children:"position"})}),(0,o.jsx)(t.td,{children:(0,o.jsx)(t.code,{children:"'top' | 'top-right' | 'top-left' | 'bottom' | 'bottom-right' | 'bottom-left'"})}),(0,o.jsx)(t.td,{children:(0,o.jsx)(t.code,{children:"'bottom'"})}),(0,o.jsx)(t.td,{children:"Toast position"})]}),(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:(0,o.jsx)(t.code,{children:"icon"})}),(0,o.jsx)(t.td,{children:(0,o.jsx)(t.code,{children:"ReactNode"})}),(0,o.jsx)(t.td,{children:"-"}),(0,o.jsx)(t.td,{children:"Custom icon"})]}),(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:(0,o.jsx)(t.code,{children:"onClose"})}),(0,o.jsx)(t.td,{children:(0,o.jsx)(t.code,{children:"() => void"})}),(0,o.jsx)(t.td,{children:"-"}),(0,o.jsx)(t.td,{children:"Close callback"})]})]})]}),"\n",(0,o.jsx)(t.h2,{id:"examples",children:"Examples"}),"\n",(0,o.jsx)(t.h3,{id:"basic-toasts",children:"Basic Toasts"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-tsx",children:"function ToastExample() {\n  const toast = useToast();\n\n  return (\n    <Stack direction=\"row\" spacing=\"md\">\n      <Button\n        onClick={() => \n          toast({\n            title: 'Info',\n            description: 'Information message',\n            status: 'info',\n          })\n        }\n      >\n        Info\n      </Button>\n\n      <Button\n        onClick={() => \n          toast({\n            title: 'Success',\n            description: 'Success message',\n            status: 'success',\n          })\n        }\n      >\n        Success\n      </Button>\n\n      <Button\n        onClick={() => \n          toast({\n            title: 'Warning',\n            description: 'Warning message',\n            status: 'warning',\n          })\n        }\n      >\n        Warning\n      </Button>\n\n      <Button\n        onClick={() => \n          toast({\n            title: 'Error',\n            description: 'Error message',\n            status: 'error',\n          })\n        }\n      >\n        Error\n      </Button>\n    </Stack>\n  );\n}\n"})}),"\n",(0,o.jsx)(t.h3,{id:"different-positions",children:"Different Positions"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-tsx",children:"function PositionExample() {\n  const toast = useToast();\n  const positions = [\n    'top',\n    'top-right',\n    'top-left',\n    'bottom',\n    'bottom-right',\n    'bottom-left',\n  ];\n\n  return (\n    <Stack direction=\"row\" spacing=\"md\" wrap=\"wrap\">\n      {positions.map((position) => (\n        <Button\n          key={position}\n          onClick={() =>\n            toast({\n              title: position,\n              description: `Toast at ${position}`,\n              position,\n            })\n          }\n        >\n          {position}\n        </Button>\n      ))}\n    </Stack>\n  );\n}\n"})}),"\n",(0,o.jsx)(t.h3,{id:"custom-duration",children:"Custom Duration"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-tsx",children:"<Button\n  onClick={() =>\n    toast({\n      title: 'Long Toast',\n      description: 'This toast will stay for 10 seconds',\n      duration: 10000,\n    })\n  }\n>\n  Show Long Toast\n</Button>\n"})}),"\n",(0,o.jsx)(t.h3,{id:"with-custom-icon",children:"With Custom Icon"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-tsx",children:"<Button\n  onClick={() =>\n    toast({\n      title: 'Custom Icon',\n      description: 'Toast with custom icon',\n      icon: <Icon name=\"star\" />,\n      status: 'info',\n    })\n  }\n>\n  Custom Icon Toast\n</Button>\n"})}),"\n",(0,o.jsx)(t.h3,{id:"with-action",children:"With Action"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-tsx",children:"<Button\n  onClick={() =>\n    toast({\n      title: 'Action Required',\n      description: 'Please confirm your action',\n      status: 'warning',\n      duration: null,\n      action: (\n        <Button size=\"sm\" onClick={() => {\n          // Handle action\n        }}>\n          Confirm\n        </Button>\n      ),\n    })\n  }\n>\n  Toast with Action\n</Button>\n"})}),"\n",(0,o.jsx)(t.h3,{id:"promise-toast",children:"Promise Toast"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-tsx",children:"function PromiseExample() {\n  const toast = useToast();\n\n  const handleAsyncAction = async () => {\n    toast.promise(\n      asyncOperation(),\n      {\n        loading: 'Processing...',\n        success: 'Operation completed',\n        error: 'Operation failed',\n      }\n    );\n  };\n\n  return (\n    <Button onClick={handleAsyncAction}>\n      Start Operation\n    </Button>\n  );\n}\n"})}),"\n",(0,o.jsx)(t.h2,{id:"customization",children:"Customization"}),"\n",(0,o.jsx)(t.h3,{id:"custom-styles",children:"Custom Styles"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-tsx",children:"<Button\n  onClick={() =>\n    toast({\n      title: 'Styled Toast',\n      description: 'Custom styled toast',\n      style: {\n        background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n        color: 'white',\n        borderRadius: '8px',\n      },\n    })\n  }\n>\n  Styled Toast\n</Button>\n"})}),"\n",(0,o.jsx)(t.h3,{id:"custom-component",children:"Custom Component"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-tsx",children:'<Button\n  onClick={() =>\n    toast({\n      render: () => (\n        <Box\n          p="md"\n          bg="primary"\n          color="white"\n          borderRadius="md"\n        >\n          <Stack direction="row" spacing="md">\n            <Avatar source={{ uri: \'/user.jpg\' }} size="sm" />\n            <Text>New message from John</Text>\n          </Stack>\n        </Box>\n      ),\n    })\n  }\n>\n  Custom Toast\n</Button>\n'})}),"\n",(0,o.jsx)(t.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,o.jsxs)(t.ol,{children:["\n",(0,o.jsx)(t.li,{children:"Keep messages brief"}),"\n",(0,o.jsx)(t.li,{children:"Use appropriate status"}),"\n",(0,o.jsx)(t.li,{children:"Consider timing carefully"}),"\n",(0,o.jsx)(t.li,{children:"Position consistently"}),"\n",(0,o.jsx)(t.li,{children:"Avoid stacking too many"}),"\n",(0,o.jsx)(t.li,{children:"Provide clear actions"}),"\n",(0,o.jsx)(t.li,{children:"Handle mobile views"}),"\n"]}),"\n",(0,o.jsx)(t.h2,{id:"api-reference",children:"API Reference"}),"\n",(0,o.jsx)(t.h3,{id:"toast-function-options",children:"Toast Function Options"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-tsx",children:"interface ToastOptions {\n  title?: string;\n  description?: string;\n  status?: 'info' | 'success' | 'warning' | 'error';\n  duration?: number | null;\n  isClosable?: boolean;\n  position?: ToastPosition;\n  icon?: ReactNode;\n  onClose?: () => void;\n  action?: ReactNode;\n  render?: () => ReactNode;\n}\n"})}),"\n",(0,o.jsx)(t.h3,{id:"theme-customization",children:"Theme Customization"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-tsx",children:"const theme = {\n  toast: {\n    durations: {\n      info: 3000,\n      success: 2000,\n      warning: 4000,\n      error: 5000,\n    },\n    variants: {\n      info: {\n        bg: '#E3F2FD',\n        color: '#1976D2',\n      },\n      success: {\n        bg: '#E8F5E9',\n        color: '#4CAF50',\n      },\n      warning: {\n        bg: '#FFF3E0',\n        color: '#FF9800',\n      },\n      error: {\n        bg: '#FFEBEE',\n        color: '#F44336',\n      },\n    },\n  },\n};\n"})}),"\n",(0,o.jsx)(t.h2,{id:"related-components",children:"Related Components"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.a,{href:"alert",children:"Alert"})," - For persistent messages"]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.a,{href:"snackbar",children:"Snackbar"})," - For action-required messages"]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.a,{href:"notification",children:"Notification"})," - For detailed notifications"]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.a,{href:"message",children:"Message"})," - For inline messages"]}),"\n"]})]})}function h(n={}){const{wrapper:t}={...(0,i.R)(),...n.components};return t?(0,o.jsx)(t,{...n,children:(0,o.jsx)(d,{...n})}):d(n)}},8453:(n,t,e)=>{e.d(t,{R:()=>r,x:()=>c});var s=e(6540);const o={},i=s.createContext(o);function r(n){const t=s.useContext(i);return s.useMemo(function(){return"function"==typeof n?n(t):{...t,...n}},[t,n])}function c(n){let t;return t=n.disableParentContext?"function"==typeof n.components?n.components(o):n.components||o:r(n.components),s.createElement(i.Provider,{value:t},n.children)}}}]);