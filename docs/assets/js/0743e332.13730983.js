"use strict";(self.webpackChunktemp_docs=self.webpackChunktemp_docs||[]).push([[396],{74:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"components/button","title":"Button","description":"The Button component triggers actions such as submitting a form, opening a dialog, or executing a task.","source":"@site/docs/components/button.mdx","sourceDirName":"components","slug":"/components/button","permalink":"/lazy-panda-ui/components/button","draft":false,"unlisted":false,"editUrl":"https://github.com/lazy-panda-ui/lazy-panda-ui/tree/main/temp-docs/docs/components/button.mdx","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Container","permalink":"/lazy-panda-ui/components/container"},"next":{"title":"ButtonGroup","permalink":"/lazy-panda-ui/components/button-group"}}');var d=t(4848),s=t(8453);const r={sidebar_position:2},l="Button",c={},o=[{value:"Import",id:"import",level:2},{value:"Usage",id:"usage",level:2},{value:"Props",id:"props",level:2},{value:"Variants",id:"variants",level:2},{value:"Examples",id:"examples",level:2},{value:"With Icons",id:"with-icons",level:3},{value:"Loading State",id:"loading-state",level:3},{value:"Full Width",id:"full-width",level:3},{value:"Custom Styled",id:"custom-styled",level:3},{value:"Accessibility",id:"accessibility",level:2},{value:"API Reference",id:"api-reference",level:2},{value:"Colors",id:"colors",level:3},{value:"Sizes",id:"sizes",level:3},{value:"Theming",id:"theming",level:2},{value:"Best Practices",id:"best-practices",level:2},{value:"Related Components",id:"related-components",level:2}];function a(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(n.header,{children:(0,d.jsx)(n.h1,{id:"button",children:"Button"})}),"\n",(0,d.jsx)(n.p,{children:"The Button component triggers actions such as submitting a form, opening a dialog, or executing a task."}),"\n",(0,d.jsx)(n.h2,{id:"import",children:"Import"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-tsx",children:"import { Button } from '@lazy-panda-ui/lazy-panda-ui';\n"})}),"\n",(0,d.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-tsx",children:"import React from 'react';\nimport { Button } from '@lazy-panda-ui/lazy-panda-ui';\n\nfunction MyComponent() {\n  return (\n    <Button title=\"Press Me\" variant=\"contained\" onPress={() => console.log('pressed')} />\n  );\n}\n"})}),"\n",(0,d.jsx)(n.h2,{id:"props",children:"Props"}),"\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Name"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Default"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"title"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"string"})}),(0,d.jsx)(n.td,{children:"\u2014"}),(0,d.jsx)(n.td,{children:"Text content of the button"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"variant"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"'text' | 'contained' | 'outlined' | 'tonal' | 'elevated'"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"'contained'"})}),(0,d.jsx)(n.td,{children:"Visual variant"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"size"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"'small' | 'medium' | 'large'"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"'medium'"})}),(0,d.jsx)(n.td,{children:"Button size"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"color"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"'primary' | 'secondary' | 'error' | 'warning' | 'info' | 'success'"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"'primary'"})}),(0,d.jsx)(n.td,{children:"Color scheme"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"disabled"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"boolean"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"false"})}),(0,d.jsx)(n.td,{children:"Disabled state"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"loading"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"boolean"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"false"})}),(0,d.jsx)(n.td,{children:"Show spinner"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"leftIcon"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"ReactNode"})}),(0,d.jsx)(n.td,{children:"\u2014"}),(0,d.jsx)(n.td,{children:"Icon before text"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"rightIcon"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"ReactNode"})}),(0,d.jsx)(n.td,{children:"\u2014"}),(0,d.jsx)(n.td,{children:"Icon after text"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"fullWidth"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"boolean"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"false"})}),(0,d.jsx)(n.td,{children:"Stretch to container width"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"ripple"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"boolean"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"true"})}),(0,d.jsx)(n.td,{children:"Android ripple effect toggle"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"onPress"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"() => void"})}),(0,d.jsx)(n.td,{children:"\u2014"}),(0,d.jsx)(n.td,{children:"Press handler"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"style"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"StyleProp<ViewStyle>"})}),(0,d.jsx)(n.td,{children:"\u2014"}),(0,d.jsx)(n.td,{children:"Container style override"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"textStyle"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"StyleProp<TextStyle>"})}),(0,d.jsx)(n.td,{children:"\u2014"}),(0,d.jsx)(n.td,{children:"Text style override"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"fullWidth"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"boolean"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"false"})}),(0,d.jsx)(n.td,{children:"If true, the button will take up the full width"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"onPress"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"() => void"})}),(0,d.jsx)(n.td,{children:"-"}),(0,d.jsx)(n.td,{children:"Callback fired when the button is pressed"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"style"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"StyleProp<ViewStyle>"})}),(0,d.jsx)(n.td,{children:"-"}),(0,d.jsx)(n.td,{children:"Additional styles for the button"})]})]})]}),"\n",(0,d.jsx)(n.h2,{id:"variants",children:"Variants"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-tsx",children:'<>\n  <Button title="Text" variant="text" />\n  <Button title="Contained" variant="contained" />\n  <Button title="Outlined" variant="outlined" />\n  <Button title="Tonal" variant="tonal" />\n  <Button title="Elevated" variant="elevated" />\n</>\n'})}),"\n",(0,d.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,d.jsx)(n.h3,{id:"with-icons",children:"With Icons"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-tsx",children:'<Button title="With Icons" variant="contained" leftIcon={<Icon name="star" />} rightIcon={<Icon name="chevron-right" />} />\n'})}),"\n",(0,d.jsx)(n.h3,{id:"loading-state",children:"Loading State"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-tsx",children:'<Button title="Loading" variant="contained" loading />\n'})}),"\n",(0,d.jsx)(n.h3,{id:"full-width",children:"Full Width"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-tsx",children:'<Button title="Full Width" variant="contained" fullWidth />\n'})}),"\n",(0,d.jsx)(n.h3,{id:"custom-styled",children:"Custom Styled"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-tsx",children:'<Button title="Rounded" variant="contained" style={{ borderRadius: 25, paddingHorizontal: 32 }} />\n'})}),"\n",(0,d.jsx)(n.h2,{id:"accessibility",children:"Accessibility"}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:["Android ripple effect is enabled by default (disable with ",(0,d.jsx)(n.code,{children:"ripple={false}"}),")."]}),"\n",(0,d.jsx)(n.li,{children:"Proper accessibility states for disabled and busy (loading)."}),"\n",(0,d.jsxs)(n.li,{children:["Provide ",(0,d.jsx)(n.code,{children:"accessibilityLabel"})," and ",(0,d.jsx)(n.code,{children:"accessibilityHint"})," when needed."]}),"\n"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-tsx",children:'<Button title="Submit" accessibilityLabel="Submit form" accessibilityHint="Submits the form and saves your data" onPress={() => {}} />\n'})}),"\n",(0,d.jsx)(n.h2,{id:"api-reference",children:"API Reference"}),"\n",(0,d.jsx)(n.h3,{id:"colors",children:"Colors"}),"\n",(0,d.jsx)(n.p,{children:"Buttons can use any of the theme colors:"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-tsx",children:'<>\n  <Button color="primary" variant="contained">Primary</Button>\n  <Button color="secondary" variant="contained">Secondary</Button>\n  <Button color="error" variant="contained">Error</Button>\n  <Button color="warning" variant="contained">Warning</Button>\n  <Button color="info" variant="contained">Info</Button>\n  <Button color="success" variant="contained">Success</Button>\n</>\n'})}),"\n",(0,d.jsx)(n.h3,{id:"sizes",children:"Sizes"}),"\n",(0,d.jsx)(n.p,{children:"Available sizes for buttons:"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-tsx",children:'<>\n  <Button size="small">Small</Button>\n  <Button size="medium">Medium</Button>\n  <Button size="large">Large</Button>\n</>\n'})}),"\n",(0,d.jsx)(n.h2,{id:"theming",children:"Theming"}),"\n",(0,d.jsxs)(n.p,{children:["Buttons use tokens under ",(0,d.jsx)(n.code,{children:"theme.button"}),", which you can override via ",(0,d.jsx)(n.code,{children:"ThemeProvider"}),"."]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-ts",children:"theme.button = {\n  sizes: {\n    small: { minHeight: number, paddingX: number, fontSize: number },\n    medium: { minHeight: number, paddingX: number, fontSize: number },\n    large: { minHeight: number, paddingX: number, fontSize: number },\n  },\n  borderRadius: number,\n  iconSpacing: number,\n  outlinedBorderWidth: number,\n  elevated: {\n    elevation: number,\n    pressedElevation: number,\n    shadowColor: string,\n    shadowOpacity: number,\n    shadowRadius: { default: number, pressed: number },\n  },\n  tonalOpacity: number,\n}\n"})}),"\n",(0,d.jsx)(n.p,{children:"Example customization:"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-tsx",children:'import { ThemeProvider, createTheme, defaultTheme } from \'@lazy-panda-ui/lazy-panda-ui/theme\';\n\nconst theme = createTheme(defaultTheme, {\n  button: {\n    sizes: { medium: { minHeight: 44, paddingX: 20, fontSize: 16 } },\n    borderRadius: 10,\n    elevated: { ...defaultTheme.button.elevated, elevation: 6, pressedElevation: 3 },\n    tonalOpacity: 0.18,\n  },\n});\n\nexport function App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <Button title="Custom" variant="tonal" />\n    </ThemeProvider>\n  );\n}\n'})}),"\n",(0,d.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,d.jsxs)(n.ol,{children:["\n",(0,d.jsx)(n.li,{children:"Use clear and action-oriented labels"}),"\n",(0,d.jsxs)(n.li,{children:["Choose appropriate variants for different actions:","\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsx)(n.li,{children:"Contained for primary actions"}),"\n",(0,d.jsx)(n.li,{children:"Outlined for secondary actions"}),"\n",(0,d.jsx)(n.li,{children:"Text for tertiary actions"}),"\n"]}),"\n"]}),"\n",(0,d.jsx)(n.li,{children:"Use consistent sizing within your application"}),"\n",(0,d.jsx)(n.li,{children:"Include loading states for async actions"}),"\n",(0,d.jsx)(n.li,{children:"Provide proper accessibility labels"}),"\n",(0,d.jsx)(n.li,{children:"Use color to convey meaning and importance"}),"\n"]}),"\n",(0,d.jsx)(n.h2,{id:"related-components",children:"Related Components"}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.a,{href:"icon-button",children:"IconButton"})," - A round button with an icon"]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.a,{href:"fab",children:"Fab"})," - A floating action button"]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.a,{href:"toggle-button",children:"ToggleButton"})," - A button that can be toggled"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,d.jsx)(n,{...e,children:(0,d.jsx)(a,{...e})}):a(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>l});var i=t(6540);const d={},s=i.createContext(d);function r(e){const n=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:r(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);