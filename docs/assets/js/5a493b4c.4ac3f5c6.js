"use strict";(self.webpackChunktemp_docs=self.webpackChunktemp_docs||[]).push([[600],{8195:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>h,frontMatter:()=>a,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"components/image-list","title":"ImageList","description":"The ImageList component is used to display a collection of images in a grid or masonry layout. It supports various customization options including loading states, error handling, and custom layouts.","source":"@site/docs/components/image-list.mdx","sourceDirName":"components","slug":"/components/image-list","permalink":"/lazy-panda-ui/components/image-list","draft":false,"unlisted":false,"editUrl":"https://github.com/lazy-panda-ui/lazy-panda-ui/tree/main/temp-docs/docs/components/image-list.mdx","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Icon","permalink":"/lazy-panda-ui/components/icon"},"next":{"title":"List","permalink":"/lazy-panda-ui/components/list"}}');var t=i(4848),r=i(8453);const a={},l="ImageList",d={},o=[{value:"Import",id:"import",level:2},{value:"Usage",id:"usage",level:2},{value:"Basic Grid Layout",id:"basic-grid-layout",level:3},{value:"Masonry Layout",id:"masonry-layout",level:3},{value:"Custom Column Count",id:"custom-column-count",level:3},{value:"With Loading State",id:"with-loading-state",level:3},{value:"With Error Handling",id:"with-error-handling",level:3},{value:"Interactive Images",id:"interactive-images",level:3},{value:"Props",id:"props",level:2},{value:"Main Props",id:"main-props",level:3},{value:"Style Props",id:"style-props",level:3},{value:"Custom Components",id:"custom-components",level:3},{value:"Event Props",id:"event-props",level:3},{value:"ImageItem Props",id:"imageitem-props",level:3},{value:"Accessibility Props",id:"accessibility-props",level:3},{value:"Theme Customization",id:"theme-customization",level:2},{value:"ImageItem Type",id:"imageitem-type",level:3}];function c(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"imagelist",children:"ImageList"})}),"\n",(0,t.jsx)(n.p,{children:"The ImageList component is used to display a collection of images in a grid or masonry layout. It supports various customization options including loading states, error handling, and custom layouts."}),"\n",(0,t.jsx)(n.h2,{id:"import",children:"Import"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"import { ImageList } from '@lazy-panda-ui/lazy-panda-ui';\n"})}),"\n",(0,t.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,t.jsx)(n.h3,{id:"basic-grid-layout",children:"Basic Grid Layout"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"import { ImageList } from '@lazy-panda-ui/lazy-panda-ui';\n\nfunction Example() {\n  const images = [\n    { source: require('./image1.jpg') },\n    { source: require('./image2.jpg') },\n    { source: require('./image3.jpg') },\n    { source: { uri: 'https://example.com/image4.jpg' } },\n  ];\n\n  return <ImageList images={images} />;\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"masonry-layout",children:"Masonry Layout"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"import { ImageList } from '@lazy-panda-ui/lazy-panda-ui';\n\nfunction Example() {\n  const images = [\n    { source: require('./image1.jpg'), aspectRatio: 1 },\n    { source: require('./image2.jpg'), aspectRatio: 0.5 },\n    { source: require('./image3.jpg'), aspectRatio: 1.5 },\n  ];\n\n  return (\n    <ImageList\n      images={images}\n      variant=\"masonry\"\n      columns={2}\n    />\n  );\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"custom-column-count",children:"Custom Column Count"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"import { ImageList } from '@lazy-panda-ui/lazy-panda-ui';\n\nfunction Example() {\n  return (\n    <>\n      <ImageList\n        images={images}\n        columns={2}\n        gap={8}\n      />\n\n      <ImageList\n        images={images}\n        columns={4}\n        gap={4}\n      />\n    </>\n  );\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"with-loading-state",children:"With Loading State"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"import { ImageList } from '@lazy-panda-ui/lazy-panda-ui';\n\nfunction Example() {\n  return (\n    <ImageList\n      images={images}\n      showLoading\n    />\n  );\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"with-error-handling",children:"With Error Handling"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"import { ImageList } from '@lazy-panda-ui/lazy-panda-ui';\n\nfunction Example() {\n  const handleError = (event) => {\n    console.log('Image failed to load:', event.nativeEvent.error);\n  };\n\n  return (\n    <ImageList\n      images={images}\n      onError={handleError}\n      fallback={<Text>Failed to load image</Text>}\n    />\n  );\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"interactive-images",children:"Interactive Images"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"import { ImageList } from '@lazy-panda-ui/lazy-panda-ui';\n\nfunction Example() {\n  const images = [\n    {\n      source: require('./image1.jpg'),\n      onPress: () => console.log('Image 1 pressed'),\n    },\n    {\n      source: require('./image2.jpg'),\n      onPress: () => console.log('Image 2 pressed'),\n    },\n  ];\n\n  return <ImageList images={images} />;\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"props",children:"Props"}),"\n",(0,t.jsx)(n.h3,{id:"main-props",children:"Main Props"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Prop"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Default"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"images"})}),(0,t.jsx)(n.td,{children:"ImageItem[]"}),(0,t.jsx)(n.td,{children:"Required"}),(0,t.jsx)(n.td,{children:"Array of image items to display"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"columns"})}),(0,t.jsx)(n.td,{children:"number"}),(0,t.jsx)(n.td,{children:"3"}),(0,t.jsx)(n.td,{children:"Number of columns in the grid"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"gap"})}),(0,t.jsx)(n.td,{children:"number"}),(0,t.jsx)(n.td,{children:"theme.spacing.sm"}),(0,t.jsx)(n.td,{children:"Space between images"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"variant"})}),(0,t.jsx)(n.td,{children:"'grid' | 'masonry'"}),(0,t.jsx)(n.td,{children:"'grid'"}),(0,t.jsx)(n.td,{children:"Layout variant of the image list"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"showLoading"})}),(0,t.jsx)(n.td,{children:"boolean"}),(0,t.jsx)(n.td,{children:"true"}),(0,t.jsx)(n.td,{children:"Whether to show loading indicator"})]})]})]}),"\n",(0,t.jsx)(n.h3,{id:"style-props",children:"Style Props"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Prop"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"style"})}),(0,t.jsx)(n.td,{children:"ViewStyle"}),(0,t.jsx)(n.td,{children:"Additional styles for the container"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"imageStyle"})}),(0,t.jsx)(n.td,{children:"ImageStyle"}),(0,t.jsx)(n.td,{children:"Additional styles for each image"})]})]})]}),"\n",(0,t.jsx)(n.h3,{id:"custom-components",children:"Custom Components"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Prop"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsx)(n.tbody,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"fallback"})}),(0,t.jsx)(n.td,{children:"React.ReactNode"}),(0,t.jsx)(n.td,{children:"Custom placeholder when image fails to load"})]})})]}),"\n",(0,t.jsx)(n.h3,{id:"event-props",children:"Event Props"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Prop"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsx)(n.tbody,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"onError"})}),(0,t.jsx)(n.td,{children:"(event: ImageErrorEvent) => void"}),(0,t.jsx)(n.td,{children:"Called when an image fails to load"})]})})]}),"\n",(0,t.jsx)(n.h3,{id:"imageitem-props",children:"ImageItem Props"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Prop"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"source"})}),(0,t.jsx)(n.td,{children:"ImageSourcePropType"}),(0,t.jsx)(n.td,{children:"Source of the image"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"aspectRatio"})}),(0,t.jsx)(n.td,{children:"number"}),(0,t.jsx)(n.td,{children:"Aspect ratio for masonry layout"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"onPress"})}),(0,t.jsx)(n.td,{children:"() => void"}),(0,t.jsx)(n.td,{children:"Called when image is pressed"})]})]})]}),"\n",(0,t.jsx)(n.h3,{id:"accessibility-props",children:"Accessibility Props"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Prop"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsx)(n.tbody,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"testID"})}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:"Test ID for testing"})]})})]}),"\n",(0,t.jsx)(n.h2,{id:"theme-customization",children:"Theme Customization"}),"\n",(0,t.jsx)(n.p,{children:"You can customize the ImageList component through the theme:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"const theme = {\n  components: {\n    imageList: {\n      container: {\n        // container styles\n      },\n      image: {\n        // image styles\n      },\n      loading: {\n        // loading indicator styles\n      },\n      fallback: {\n        // fallback container styles\n      },\n      variants: {\n        grid: {\n          // grid variant styles\n        },\n        masonry: {\n          // masonry variant styles\n        },\n      },\n    },\n  },\n};\n"})}),"\n",(0,t.jsx)(n.h3,{id:"imageitem-type",children:"ImageItem Type"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"interface ImageItem {\n  /**\n   * Source of the image\n   */\n  source: ImageSourcePropType;\n\n  /**\n   * Optional aspect ratio for masonry layout\n   */\n  aspectRatio?: number;\n\n  /**\n   * Called when image is pressed\n   */\n  onPress?: () => void;\n}\n"})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>l});var s=i(6540);const t={},r=s.createContext(t);function a(e){const n=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);