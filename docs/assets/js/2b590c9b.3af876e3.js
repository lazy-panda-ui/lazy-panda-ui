"use strict";(self.webpackChunktemp_docs=self.webpackChunktemp_docs||[]).push([[495],{8453:(e,n,o)=>{o.d(n,{R:()=>t,x:()=>d});var i=o(6540);const l={},s=i.createContext(l);function t(e){const n=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:t(e.components),i.createElement(s.Provider,{value:n},e.children)}},8688:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>a,contentTitle:()=>d,default:()=>h,frontMatter:()=>t,metadata:()=>i,toc:()=>r});const i=JSON.parse('{"id":"components/dialog","title":"Dialog","description":"The Dialog (Modal) component is used to create focused interactions that require user attention or input. It displays content that temporarily blocks interactions with the main view.","source":"@site/docs/components/dialog.mdx","sourceDirName":"components","slug":"/components/dialog","permalink":"/lazy-panda-ui/components/dialog","draft":false,"unlisted":false,"editUrl":"https://github.com/lazy-panda-ui/lazy-panda-ui/tree/main/temp-docs/docs/components/dialog.mdx","tags":[],"version":"current","sidebarPosition":16,"frontMatter":{"sidebar_position":16},"sidebar":"tutorialSidebar","previous":{"title":"Chip","permalink":"/lazy-panda-ui/components/chip"},"next":{"title":"Drawer","permalink":"/lazy-panda-ui/components/drawer"}}');var l=o(4848),s=o(8453);const t={sidebar_position:16},d="Dialog",a={},r=[{value:"Import",id:"import",level:2},{value:"Usage",id:"usage",level:2},{value:"Props",id:"props",level:2},{value:"Dialog Props",id:"dialog-props",level:3},{value:"Dialog.Header Props",id:"dialogheader-props",level:3},{value:"Examples",id:"examples",level:2},{value:"Basic Dialog",id:"basic-dialog",level:3},{value:"Different Sizes",id:"different-sizes",level:3},{value:"Custom Animation",id:"custom-animation",level:3},{value:"Nested Dialogs",id:"nested-dialogs",level:3},{value:"Form Dialog",id:"form-dialog",level:3},{value:"Scroll Behavior",id:"scroll-behavior",level:2},{value:"Inside Dialog",id:"inside-dialog",level:3},{value:"Outside Dialog",id:"outside-dialog",level:3},{value:"Customization",id:"customization",level:2},{value:"Custom Styles",id:"custom-styles",level:3},{value:"Custom Transitions",id:"custom-transitions",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"API Reference",id:"api-reference",level:2},{value:"Size Values",id:"size-values",level:3},{value:"Theme Customization",id:"theme-customization",level:3},{value:"Related Components",id:"related-components",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.header,{children:(0,l.jsx)(n.h1,{id:"dialog",children:"Dialog"})}),"\n",(0,l.jsx)(n.p,{children:"The Dialog (Modal) component is used to create focused interactions that require user attention or input. It displays content that temporarily blocks interactions with the main view."}),"\n",(0,l.jsx)(n.h2,{id:"import",children:"Import"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-tsx",children:"import { Dialog } from '@lazy-panda-ui/lazy-panda-ui';\n"})}),"\n",(0,l.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-tsx",children:"import React from 'react';\nimport { Dialog, Button } from '@lazy-panda-ui/lazy-panda-ui';\n\nfunction MyComponent() {\n  const [open, setOpen] = useState(false);\n\n  return (\n    <>\n      <Button onClick={() => setOpen(true)}>\n        Open Dialog\n      </Button>\n\n      <Dialog open={open} onClose={() => setOpen(false)}>\n        <Dialog.Header>Dialog Title</Dialog.Header>\n        <Dialog.Content>\n          This is the dialog content.\n        </Dialog.Content>\n        <Dialog.Footer>\n          <Button onClick={() => setOpen(false)}>\n            Close\n          </Button>\n        </Dialog.Footer>\n      </Dialog>\n    </>\n  );\n}\n"})}),"\n",(0,l.jsx)(n.h2,{id:"props",children:"Props"}),"\n",(0,l.jsx)(n.h3,{id:"dialog-props",children:"Dialog Props"}),"\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{children:"Name"}),(0,l.jsx)(n.th,{children:"Type"}),(0,l.jsx)(n.th,{children:"Default"}),(0,l.jsx)(n.th,{children:"Description"})]})}),(0,l.jsxs)(n.tbody,{children:[(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"open"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"boolean"})}),(0,l.jsx)(n.td,{children:"-"}),(0,l.jsx)(n.td,{children:"Whether dialog is visible"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"onClose"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"() => void"})}),(0,l.jsx)(n.td,{children:"-"}),(0,l.jsx)(n.td,{children:"Called when dialog closes"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"size"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"'sm' | 'md' | 'lg' | 'xl' | 'full'"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"'md'"})}),(0,l.jsx)(n.td,{children:"Dialog size"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"closeOnOverlayClick"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"boolean"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"true"})}),(0,l.jsx)(n.td,{children:"Close on overlay click"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"closeOnEscape"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"boolean"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"true"})}),(0,l.jsx)(n.td,{children:"Close on Escape key"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"centered"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"boolean"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"true"})}),(0,l.jsx)(n.td,{children:"Center vertically"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"scrollBehavior"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"'inside' | 'outside'"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"'inside'"})}),(0,l.jsx)(n.td,{children:"Scroll behavior"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"trapFocus"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"boolean"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"true"})}),(0,l.jsx)(n.td,{children:"Trap keyboard focus"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"returnFocus"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"boolean"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"true"})}),(0,l.jsx)(n.td,{children:"Return focus on close"})]})]})]}),"\n",(0,l.jsx)(n.h3,{id:"dialogheader-props",children:"Dialog.Header Props"}),"\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{children:"Name"}),(0,l.jsx)(n.th,{children:"Type"}),(0,l.jsx)(n.th,{children:"Default"}),(0,l.jsx)(n.th,{children:"Description"})]})}),(0,l.jsxs)(n.tbody,{children:[(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"showCloseButton"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"boolean"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"true"})}),(0,l.jsx)(n.td,{children:"Show close button"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"closeButtonProps"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"ButtonProps"})}),(0,l.jsx)(n.td,{children:"-"}),(0,l.jsx)(n.td,{children:"Close button props"})]})]})]}),"\n",(0,l.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,l.jsx)(n.h3,{id:"basic-dialog",children:"Basic Dialog"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-tsx",children:'<Dialog open={open} onClose={onClose}>\n  <Dialog.Header>Confirmation</Dialog.Header>\n  <Dialog.Content>\n    Are you sure you want to continue?\n  </Dialog.Content>\n  <Dialog.Footer>\n    <Button variant="outlined" onClick={onClose}>\n      Cancel\n    </Button>\n    <Button onClick={onConfirm}>\n      Confirm\n    </Button>\n  </Dialog.Footer>\n</Dialog>\n'})}),"\n",(0,l.jsx)(n.h3,{id:"different-sizes",children:"Different Sizes"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-tsx",children:"<Stack spacing=\"md\">\n  {['sm', 'md', 'lg', 'xl', 'full'].map((size) => (\n    <Button\n      key={size}\n      onClick={() => openDialog(size)}\n    >\n      Open {size} dialog\n    </Button>\n  ))}\n</Stack>\n"})}),"\n",(0,l.jsx)(n.h3,{id:"custom-animation",children:"Custom Animation"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-tsx",children:"<Dialog\n  open={open}\n  onClose={onClose}\n  motionProps={{\n    initial: { opacity: 0, y: -20 },\n    animate: { opacity: 1, y: 0 },\n    exit: { opacity: 0, y: 20 },\n    transition: { duration: 0.2 }\n  }}\n>\n  <Dialog.Header>Animated Dialog</Dialog.Header>\n  <Dialog.Content>\n    This dialog has custom animation.\n  </Dialog.Content>\n</Dialog>\n"})}),"\n",(0,l.jsx)(n.h3,{id:"nested-dialogs",children:"Nested Dialogs"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-tsx",children:"<Dialog open={open} onClose={onClose}>\n  <Dialog.Header>Parent Dialog</Dialog.Header>\n  <Dialog.Content>\n    <Button onClick={() => setNestedOpen(true)}>\n      Open nested dialog\n    </Button>\n  </Dialog.Content>\n\n  <Dialog open={nestedOpen} onClose={onNestedClose}>\n    <Dialog.Header>Nested Dialog</Dialog.Header>\n    <Dialog.Content>\n      This is a nested dialog.\n    </Dialog.Content>\n  </Dialog>\n</Dialog>\n"})}),"\n",(0,l.jsx)(n.h3,{id:"form-dialog",children:"Form Dialog"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-tsx",children:'<Dialog open={open} onClose={onClose}>\n  <Dialog.Header>Create Account</Dialog.Header>\n  <Dialog.Content>\n    <Stack spacing="md">\n      <TextField\n        label="Username"\n        value={username}\n        onChange={setUsername}\n      />\n      <TextField\n        label="Email"\n        type="email"\n        value={email}\n        onChange={setEmail}\n      />\n      <TextField\n        label="Password"\n        type="password"\n        value={password}\n        onChange={setPassword}\n      />\n    </Stack>\n  </Dialog.Content>\n  <Dialog.Footer>\n    <Button variant="outlined" onClick={onClose}>\n      Cancel\n    </Button>\n    <Button onClick={handleSubmit}>\n      Create\n    </Button>\n  </Dialog.Footer>\n</Dialog>\n'})}),"\n",(0,l.jsx)(n.h2,{id:"scroll-behavior",children:"Scroll Behavior"}),"\n",(0,l.jsx)(n.h3,{id:"inside-dialog",children:"Inside Dialog"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-tsx",children:'<Dialog\n  open={open}\n  onClose={onClose}\n  scrollBehavior="inside"\n>\n  <Dialog.Header>Scrollable Content</Dialog.Header>\n  <Dialog.Content>\n    {/* Long content that scrolls inside dialog */}\n  </Dialog.Content>\n</Dialog>\n'})}),"\n",(0,l.jsx)(n.h3,{id:"outside-dialog",children:"Outside Dialog"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-tsx",children:'<Dialog\n  open={open}\n  onClose={onClose}\n  scrollBehavior="outside"\n>\n  <Dialog.Header>Fixed Header</Dialog.Header>\n  <Dialog.Content>\n    {/* Content that causes page to scroll */}\n  </Dialog.Content>\n  <Dialog.Footer>Fixed Footer</Dialog.Footer>\n</Dialog>\n'})}),"\n",(0,l.jsx)(n.h2,{id:"customization",children:"Customization"}),"\n",(0,l.jsx)(n.h3,{id:"custom-styles",children:"Custom Styles"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-tsx",children:"<Dialog\n  open={open}\n  onClose={onClose}\n  containerStyle={{\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n    borderRadius: '16px',\n  }}\n  overlayStyle={{\n    backgroundColor: 'rgba(0, 0, 0, 0.8)',\n  }}\n>\n  <Dialog.Header\n    style={{ color: 'white' }}\n  >\n    Styled Dialog\n  </Dialog.Header>\n  <Dialog.Content\n    style={{ color: 'white' }}\n  >\n    This dialog has custom styling.\n  </Dialog.Content>\n</Dialog>\n"})}),"\n",(0,l.jsx)(n.h3,{id:"custom-transitions",children:"Custom Transitions"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-tsx",children:"<Dialog\n  open={open}\n  onClose={onClose}\n  transitions={{\n    overlay: {\n      enter: 'fade-in',\n      exit: 'fade-out',\n    },\n    dialog: {\n      enter: 'slide-up',\n      exit: 'slide-down',\n    },\n  }}\n>\n  {/* Dialog content */}\n</Dialog>\n"})}),"\n",(0,l.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsx)(n.li,{children:"Keep content focused and concise"}),"\n",(0,l.jsx)(n.li,{children:"Provide clear actions"}),"\n",(0,l.jsx)(n.li,{children:"Handle keyboard interactions"}),"\n",(0,l.jsx)(n.li,{children:"Consider mobile viewports"}),"\n",(0,l.jsx)(n.li,{children:"Maintain proper focus management"}),"\n",(0,l.jsx)(n.li,{children:"Use appropriate sizes"}),"\n",(0,l.jsx)(n.li,{children:"Implement proper error handling"}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"api-reference",children:"API Reference"}),"\n",(0,l.jsx)(n.h3,{id:"size-values",children:"Size Values"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-tsx",children:"const dialogSizes = {\n  sm: '400px',\n  md: '560px',\n  lg: '720px',\n  xl: '880px',\n  full: '100vw',\n};\n"})}),"\n",(0,l.jsx)(n.h3,{id:"theme-customization",children:"Theme Customization"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-tsx",children:"const theme = {\n  dialog: {\n    overlay: {\n      background: 'rgba(0, 0, 0, 0.5)',\n      zIndex: 1000,\n    },\n    container: {\n      background: 'white',\n      borderRadius: '8px',\n      boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)',\n    },\n    header: {\n      padding: '16px 24px',\n      borderBottom: '1px solid #eee',\n    },\n    content: {\n      padding: '24px',\n    },\n    footer: {\n      padding: '16px 24px',\n      borderTop: '1px solid #eee',\n    },\n  },\n};\n"})}),"\n",(0,l.jsx)(n.h2,{id:"related-components",children:"Related Components"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.a,{href:"modal",children:"Modal"})," - Alternative name for Dialog"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.a,{href:"drawer",children:"Drawer"})," - Side-sliding panel"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.a,{href:"popover",children:"Popover"})," - For smaller overlays"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.a,{href:"alert",children:"Alert"})," - For simple messages"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(c,{...e})}):c(e)}}}]);