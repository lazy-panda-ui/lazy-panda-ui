"use strict";(self.webpackChunktemp_docs=self.webpackChunktemp_docs||[]).push([[5687],{2069:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>d,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"components/button-group","title":"ButtonGroup","description":"The ButtonGroup component is used to group related buttons together. It\'s perfect for creating segmented controls, toggle groups, or any set of related actions.","source":"@site/docs/components/button-group.mdx","sourceDirName":"components","slug":"/components/button-group","permalink":"/lazy-panda-ui/components/button-group","draft":false,"unlisted":false,"editUrl":"https://github.com/lazy-panda-ui/lazy-panda-ui/tree/main/temp-docs/docs/components/button-group.mdx","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Button","permalink":"/lazy-panda-ui/components/button"},"next":{"title":"Card","permalink":"/lazy-panda-ui/components/card"}}');var r=t(4848),o=t(8453);const d={},i="ButtonGroup",l={},c=[{value:"Import",id:"import",level:2},{value:"Usage",id:"usage",level:2},{value:"Basic ButtonGroup",id:"basic-buttongroup",level:3},{value:"With Selected State",id:"with-selected-state",level:3},{value:"Different Variants",id:"different-variants",level:3},{value:"Different Sizes",id:"different-sizes",level:3},{value:"Vertical Direction",id:"vertical-direction",level:3},{value:"With Disabled Buttons",id:"with-disabled-buttons",level:3},{value:"Props",id:"props",level:2},{value:"Main Props",id:"main-props",level:3},{value:"Style Props",id:"style-props",level:3},{value:"Accessibility Props",id:"accessibility-props",level:3},{value:"Theme Customization",id:"theme-customization",level:2}];function a(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"buttongroup",children:"ButtonGroup"})}),"\n",(0,r.jsx)(n.p,{children:"The ButtonGroup component is used to group related buttons together. It's perfect for creating segmented controls, toggle groups, or any set of related actions."}),"\n",(0,r.jsx)(n.h2,{id:"import",children:"Import"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"import { ButtonGroup } from '@lazy-panda-ui/lazy-panda-ui';\n"})}),"\n",(0,r.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,r.jsx)(n.h3,{id:"basic-buttongroup",children:"Basic ButtonGroup"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"import { ButtonGroup } from '@lazy-panda-ui/lazy-panda-ui';\n\nfunction Example() {\n  const buttons = [\n    { label: 'Left', onPress: () => console.log('Left pressed') },\n    { label: 'Middle', onPress: () => console.log('Middle pressed') },\n    { label: 'Right', onPress: () => console.log('Right pressed') },\n  ];\n\n  return <ButtonGroup buttons={buttons} />;\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"with-selected-state",children:"With Selected State"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"import { ButtonGroup } from '@lazy-panda-ui/lazy-panda-ui';\n\nfunction Example() {\n  const [selectedIndex, setSelectedIndex] = useState(0);\n\n  const buttons = [\n    { label: 'Day', onPress: () => setSelectedIndex(0) },\n    { label: 'Week', onPress: () => setSelectedIndex(1) },\n    { label: 'Month', onPress: () => setSelectedIndex(2) },\n  ];\n\n  return (\n    <ButtonGroup\n      buttons={buttons}\n      selectedIndex={selectedIndex}\n    />\n  );\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"different-variants",children:"Different Variants"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"import { ButtonGroup } from '@lazy-panda-ui/lazy-panda-ui';\n\nfunction Example() {\n  const buttons = [\n    { label: 'One', onPress: () => {} },\n    { label: 'Two', onPress: () => {} },\n  ];\n\n  return (\n    <>\n      <ButtonGroup\n        buttons={buttons}\n        variant=\"outlined\"\n      />\n\n      <ButtonGroup\n        buttons={buttons}\n        variant=\"contained\"\n      />\n\n      <ButtonGroup\n        buttons={buttons}\n        variant=\"text\"\n      />\n    </>\n  );\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"different-sizes",children:"Different Sizes"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"import { ButtonGroup } from '@lazy-panda-ui/lazy-panda-ui';\n\nfunction Example() {\n  const buttons = [\n    { label: 'Small', onPress: () => {} },\n    { label: 'Small', onPress: () => {} },\n  ];\n\n  return (\n    <>\n      <ButtonGroup\n        buttons={buttons}\n        size=\"small\"\n      />\n\n      <ButtonGroup\n        buttons={buttons}\n        size=\"medium\"\n      />\n\n      <ButtonGroup\n        buttons={buttons}\n        size=\"large\"\n      />\n    </>\n  );\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"vertical-direction",children:"Vertical Direction"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"import { ButtonGroup } from '@lazy-panda-ui/lazy-panda-ui';\n\nfunction Example() {\n  const buttons = [\n    { label: 'Top', onPress: () => {} },\n    { label: 'Middle', onPress: () => {} },\n    { label: 'Bottom', onPress: () => {} },\n  ];\n\n  return (\n    <ButtonGroup\n      buttons={buttons}\n      direction=\"vertical\"\n    />\n  );\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"with-disabled-buttons",children:"With Disabled Buttons"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"import { ButtonGroup } from '@lazy-panda-ui/lazy-panda-ui';\n\nfunction Example() {\n  const buttons = [\n    { label: 'Enabled', onPress: () => {} },\n    { label: 'Disabled', onPress: () => {}, disabled: true },\n    { label: 'Enabled', onPress: () => {} },\n  ];\n\n  return <ButtonGroup buttons={buttons} />;\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"props",children:"Props"}),"\n",(0,r.jsx)(n.h3,{id:"main-props",children:"Main Props"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Prop"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Default"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"buttons"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"ButtonConfig[]"})}),(0,r.jsx)(n.td,{children:"Required"}),(0,r.jsxs)(n.td,{children:["Array of button configurations. Each button has ",(0,r.jsx)(n.code,{children:"label"}),", ",(0,r.jsx)(n.code,{children:"onPress"}),", and optional ",(0,r.jsx)(n.code,{children:"disabled"})," props"]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"selectedIndex"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"number"})}),(0,r.jsx)(n.td,{children:"-"}),(0,r.jsx)(n.td,{children:"Index of the selected button"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"variant"})}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:'"outlined"'})," | ",(0,r.jsx)(n.code,{children:'"contained"'})," | ",(0,r.jsx)(n.code,{children:'"text"'})]}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:'"outlined"'})}),(0,r.jsx)(n.td,{children:"Visual variant of the button group"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"size"})}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:'"small"'})," | ",(0,r.jsx)(n.code,{children:'"medium"'})," | ",(0,r.jsx)(n.code,{children:'"large"'})]}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:'"medium"'})}),(0,r.jsx)(n.td,{children:"Size of the buttons"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"direction"})}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:'"horizontal"'})," | ",(0,r.jsx)(n.code,{children:'"vertical"'})]}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:'"horizontal"'})}),(0,r.jsx)(n.td,{children:"Direction of the button group"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"disabled"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"boolean"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"false"})}),(0,r.jsx)(n.td,{children:"Whether the entire button group is disabled"})]})]})]}),"\n",(0,r.jsx)(n.p,{children:"Where ButtonConfig is:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"interface ButtonConfig {\n  /** The text to display in the button */\n  label: string;\n  /** Function to call when button is pressed */\n  onPress: () => void;\n  /** Whether the button is disabled */\n  disabled?: boolean;\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"style-props",children:"Style Props"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Prop"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"style"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"object"})}),(0,r.jsx)(n.td,{children:"Additional styles for the container. Uses React Native ViewStyle"})]})})]}),"\n",(0,r.jsx)(n.h3,{id:"accessibility-props",children:"Accessibility Props"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Prop"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"testID"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"string"})}),(0,r.jsx)(n.td,{children:"Test ID for testing"})]})})]}),"\n",(0,r.jsx)(n.h2,{id:"theme-customization",children:"Theme Customization"}),"\n",(0,r.jsxs)(n.p,{children:["You can customize ButtonGroup via ",(0,r.jsx)(n.code,{children:"theme.buttonGroup"})," tokens using ",(0,r.jsx)(n.code,{children:"ThemeProvider"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"import { ThemeProvider, createTheme, defaultTheme } from '@lazy-panda-ui/lazy-panda-ui/theme';\n\nconst theme = createTheme(defaultTheme, {\n  buttonGroup: {\n    sizes: {\n      medium: { height: 44 },\n    },\n    item: { borderRadius: 6 },\n    overlap: { horizontal: -2, vertical: -2 },\n    variants: {\n      outlined: {\n        background: '#fff',\n        selectedBackground: '#eaf3ff',\n        borderWidth: 1,\n        borderColor: '#c7c7cc',\n        selectedBorderColor: defaultTheme.colors.primary,\n      },\n      contained: {\n        background: defaultTheme.colors.surfaceVariant,\n        selectedBackground: defaultTheme.colors.primaryContainer,\n      },\n      text: {\n        background: 'transparent',\n        selectedBackground: defaultTheme.colors.primaryContainer,\n      },\n    },\n  },\n});\n\nexport function App() {\n  return (\n    <ThemeProvider theme={theme}>\n      {/* your app */}\n    </ThemeProvider>\n  );\n}\n"})})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>d,x:()=>i});var s=t(6540);const r={},o=s.createContext(r);function d(e){const n=s.useContext(o);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);