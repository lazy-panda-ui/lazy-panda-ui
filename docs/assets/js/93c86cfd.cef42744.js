"use strict";(self.webpackChunktemp_docs=self.webpackChunktemp_docs||[]).push([[3145],{3570:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>r,contentTitle:()=>c,default:()=>h,frontMatter:()=>t,metadata:()=>l,toc:()=>o});const l=JSON.parse('{"id":"components/chip","title":"Chip","description":"The Chip component is used to represent small blocks of information, tags, choices, or actions that can be submitted or removed.","source":"@site/docs/components/chip.mdx","sourceDirName":"components","slug":"/components/chip","permalink":"/lazy-panda-ui/components/chip","draft":false,"unlisted":false,"editUrl":"https://github.com/lazy-panda-ui/lazy-panda-ui/tree/main/temp-docs/docs/components/chip.mdx","tags":[],"version":"current","sidebarPosition":13,"frontMatter":{"sidebar_position":13},"sidebar":"tutorialSidebar","previous":{"title":"Card","permalink":"/lazy-panda-ui/components/card"},"next":{"title":"CheckBox","permalink":"/lazy-panda-ui/components/checkbox"}}');var a=i(4848),s=i(8453);const t={sidebar_position:13},c="Chip",r={},o=[{value:"Import",id:"import",level:2},{value:"Usage",id:"usage",level:2},{value:"Props",id:"props",level:2},{value:"Examples",id:"examples",level:2},{value:"Basic Chips",id:"basic-chips",level:3},{value:"Chip Variants",id:"chip-variants",level:3},{value:"Sizes",id:"sizes",level:3},{value:"With Icons",id:"with-icons",level:3},{value:"Closeable",id:"closeable",level:3},{value:"Interactive Chips",id:"interactive-chips",level:2},{value:"Clickable Chips",id:"clickable-chips",level:3},{value:"Deletable Chips",id:"deletable-chips",level:3},{value:"Customization",id:"customization",level:2},{value:"Theming with ThemeProvider",id:"theming-with-themeprovider",level:3},{value:"Custom Delete Icon",id:"custom-delete-icon",level:3},{value:"Shape Variation",id:"shape-variation",level:3},{value:"Array Management",id:"array-management",level:2},{value:"Chip Array",id:"chip-array",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"Related Components",id:"related-components",level:2},{value:"Related Components",id:"related-components-1",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"chip",children:"Chip"})}),"\n",(0,a.jsx)(n.p,{children:"The Chip component is used to represent small blocks of information, tags, choices, or actions that can be submitted or removed."}),"\n",(0,a.jsx)(n.h2,{id:"import",children:"Import"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:"import { Chip } from '@lazy-panda-ui/lazy-panda-ui';\n"})}),"\n",(0,a.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:"import React from 'react';\nimport { Chip } from '@lazy-panda-ui/lazy-panda-ui';\n\nfunction MyComponent() {\n  return (\n    <Chip\n      label=\"Example Chip\"\n      onDelete={() => console.log('deleted')}\n    />\n  );\n}\n"})}),"\n",(0,a.jsx)(n.h2,{id:"props",children:"Props"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"label: string"}),"\n",(0,a.jsx)(n.li,{children:"leftIcon?: React.ReactNode"}),"\n",(0,a.jsx)(n.li,{children:"rightIcon?: React.ReactNode"}),"\n",(0,a.jsx)(n.li,{children:"onPress?: () => void"}),"\n",(0,a.jsx)(n.li,{children:"selected?: boolean (default false)"}),"\n",(0,a.jsx)(n.li,{children:"variant?: 'filled' | 'outlined' | 'tonal' (default 'outlined')"}),"\n",(0,a.jsx)(n.li,{children:"size?: 'small' | 'medium' | 'large' (default 'medium')"}),"\n",(0,a.jsx)(n.li,{children:"disabled?: boolean (default false)"}),"\n",(0,a.jsx)(n.li,{children:"closeable?: boolean (default false)"}),"\n",(0,a.jsx)(n.li,{children:"onClose?: () => void"}),"\n",(0,a.jsx)(n.li,{children:"style?: ViewStyle"}),"\n",(0,a.jsx)(n.li,{children:"labelStyle?: TextStyle"}),"\n",(0,a.jsx)(n.li,{children:"testID?: string"}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,a.jsx)(n.h3,{id:"basic-chips",children:"Basic Chips"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:'<Stack direction="row" spacing="sm">\n  <Chip label="Basic" />\n  <Chip label="Clickable" clickable />\n  <Chip label="Deletable" onDelete={() => {}} />\n  <Chip label="Disabled" disabled />\n</Stack>\n'})}),"\n",(0,a.jsx)(n.h3,{id:"chip-variants",children:"Chip Variants"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:'<Stack direction="row" spacing="sm">\n  <Chip variant="filled" label="Filled" />\n  <Chip variant="outlined" label="Outlined" />\n  <Chip variant="tonal" label="Tonal" />\n  <Chip variant="outlined" label="Selected" selected />\n</Stack>\n'})}),"\n",(0,a.jsx)(n.h3,{id:"sizes",children:"Sizes"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:'<Stack direction="row" spacing="sm">\n  <Chip size="small" label="Small" />\n  <Chip size="medium" label="Medium" />\n  <Chip size="large" label="Large" />\n</Stack>\n'})}),"\n",(0,a.jsx)(n.h3,{id:"with-icons",children:"With Icons"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:'<Stack direction="row" spacing="sm">\n  <Chip leftIcon={<Icon name="user" />} label="With Icon" />\n  <Chip rightIcon={<Icon name="close" />} label="Dismiss" />\n  <Chip leftIcon={<Icon name="check" />} label="Selected" selected />\n</Stack>\n'})}),"\n",(0,a.jsx)(n.h3,{id:"closeable",children:"Closeable"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:'<Stack direction="row" spacing="sm">\n  <Chip label="Closable" closeable onClose={() => {}} />\n  <Chip label="Disabled" closeable disabled />\n</Stack>\n'})}),"\n",(0,a.jsx)(n.h2,{id:"interactive-chips",children:"Interactive Chips"}),"\n",(0,a.jsx)(n.h3,{id:"clickable-chips",children:"Clickable Chips"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:'<Stack direction="row" spacing="sm">\n  <Chip\n    label="Click me"\n    clickable\n    onClick={() => console.log(\'clicked\')}\n  />\n  <Chip\n    label="Select"\n    clickable\n    selected\n    color="primary"\n  />\n</Stack>\n'})}),"\n",(0,a.jsx)(n.h3,{id:"deletable-chips",children:"Deletable Chips"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:'<Stack direction="row" spacing="sm">\n  <Chip\n    label="Delete me"\n    onDelete={() => console.log(\'deleted\')}\n  />\n  <Chip\n    label="Custom delete"\n    onDelete={() => {}}\n    deleteIcon={<Icon name="close" />}\n  />\n</Stack>\n'})}),"\n",(0,a.jsx)(n.h2,{id:"customization",children:"Customization"}),"\n",(0,a.jsx)(n.h3,{id:"theming-with-themeprovider",children:"Theming with ThemeProvider"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:'import { ThemeProvider, createTheme, defaultTheme } from \'@lazy-panda-ui/lazy-panda-ui/theme\';\n\nconst theme = createTheme(defaultTheme, {\n  chip: {\n    sizes: {\n      medium: { minHeight: 36, paddingX: 14, fontSize: 15, iconSpacing: 6 },\n    },\n    variants: {\n      outlined: {\n        background: defaultTheme.colors.surface,\n        selectedBackground: defaultTheme.colors.primaryContainer,\n        text: defaultTheme.colors.onSurface,\n        selectedText: defaultTheme.colors.primary,\n        borderColor: defaultTheme.colors.outline,\n        selectedBorderColor: defaultTheme.colors.primary,\n      },\n    },\n    ripple: { color: defaultTheme.colors.onSurface },\n  },\n});\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <Chip variant="outlined" label="Custom Chip" />\n    </ThemeProvider>\n  );\n}\n'})}),"\n",(0,a.jsx)(n.h3,{id:"custom-delete-icon",children:"Custom Delete Icon"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:'<Chip\n  label="Custom Delete"\n  onDelete={() => {}}\n  deleteIcon={\n    <Icon\n      name="trash"\n      color="error"\n      size="sm"\n    />\n  }\n/>\n'})}),"\n",(0,a.jsx)(n.h3,{id:"shape-variation",children:"Shape Variation"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:'<Stack direction="row" spacing="sm">\n  <Chip\n    label="Rounded"\n    style={{ borderRadius: \'16px\' }}\n  />\n  <Chip\n    label="Square"\n    style={{ borderRadius: \'4px\' }}\n  />\n</Stack>\n'})}),"\n",(0,a.jsx)(n.h2,{id:"array-management",children:"Array Management"}),"\n",(0,a.jsx)(n.h3,{id:"chip-array",children:"Chip Array"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:"function ChipArray() {\n  const [chips, setChips] = React.useState([\n    'React', 'TypeScript', 'JavaScript'\n  ]);\n\n  const handleDelete = (chipToDelete: string) => {\n    setChips(chips.filter(chip => chip !== chipToDelete));\n  };\n\n  return (\n    <Stack direction=\"row\" spacing=\"sm\">\n      {chips.map(chip => (\n        <Chip\n          key={chip}\n          label={chip}\n          onDelete={() => handleDelete(chip)}\n        />\n      ))}\n    </Stack>\n  );\n}\n"})}),"\n",(0,a.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsx)(n.li,{children:"Use clear and concise labels"}),"\n",(0,a.jsx)(n.li,{children:"Maintain consistent spacing"}),"\n",(0,a.jsx)(n.li,{children:"Choose appropriate colors"}),"\n",(0,a.jsx)(n.li,{children:"Handle interactions gracefully"}),"\n",(0,a.jsx)(n.li,{children:"Consider mobile touch targets"}),"\n",(0,a.jsx)(n.li,{children:"Provide visual feedback"}),"\n",(0,a.jsx)(n.li,{children:"Keep delete actions reversible"}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"related-components",children:"Related Components"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"badge",children:"Badge"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"button",children:"Button"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"avatar",children:"Avatar"})}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"related-components-1",children:"Related Components"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"badge",children:"Badge"})," - For status indicators"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"tag",children:"Tag"})," - For simpler labeling"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"button",children:"Button"})," - For primary actions"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"avatar",children:"Avatar"})," - For user representation in chips"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>c});var l=i(6540);const a={},s=l.createContext(a);function t(e){const n=l.useContext(s);return l.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:t(e.components),l.createElement(s.Provider,{value:n},e.children)}}}]);