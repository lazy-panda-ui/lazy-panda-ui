"use strict";(self.webpackChunktemp_docs=self.webpackChunktemp_docs||[]).push([[980],{5742:(e,l,n)=>{n.r(l),n.d(l,{assets:()=>r,contentTitle:()=>o,default:()=>h,frontMatter:()=>d,metadata:()=>a,toc:()=>i});const a=JSON.parse('{"id":"components/data-display/table","title":"Table","description":"The Table component provides a way to organize and display data in rows and columns. It supports features like sorting, pagination, and row selection.","source":"@site/docs/components/data-display/table.mdx","sourceDirName":"components/data-display","slug":"/components/data-display/table","permalink":"/lazy-panda-ui/components/data-display/table","draft":false,"unlisted":false,"editUrl":"https://github.com/lazy-panda-ui/lazy-panda-ui/tree/main/temp-docs/docs/components/data-display/table.mdx","tags":[],"version":"current","sidebarPosition":27,"frontMatter":{"sidebar_position":27},"sidebar":"tutorialSidebar","previous":{"title":"Popover","permalink":"/lazy-panda-ui/components/data-display/popover"},"next":{"title":"Tooltip","permalink":"/lazy-panda-ui/components/data-display/tooltip"}}');var t=n(4848),s=n(8453);const d={sidebar_position:27},o="Table",r={},i=[{value:"Import",id:"import",level:2},{value:"Usage",id:"usage",level:2},{value:"Props",id:"props",level:2},{value:"Table Props",id:"table-props",level:3},{value:"TableCell Props",id:"tablecell-props",level:3},{value:"Examples",id:"examples",level:2},{value:"Basic Table",id:"basic-table",level:3},{value:"Sortable Table",id:"sortable-table",level:3},{value:"With Selection",id:"with-selection",level:3},{value:"With Pagination",id:"with-pagination",level:3},{value:"Custom Styling",id:"custom-styling",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"API Reference",id:"api-reference",level:2},{value:"TableProps",id:"tableprops",level:3},{value:"Theme Customization",id:"theme-customization",level:3},{value:"Related Components",id:"related-components",level:2}];function c(e){const l={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(l.header,{children:(0,t.jsx)(l.h1,{id:"table",children:"Table"})}),"\n",(0,t.jsx)(l.p,{children:"The Table component provides a way to organize and display data in rows and columns. It supports features like sorting, pagination, and row selection."}),"\n",(0,t.jsx)(l.h2,{id:"import",children:"Import"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-tsx",children:"import { Table, TableHead, TableBody, TableRow, TableCell } from '@lazy-panda-ui/lazy-panda-ui';\n"})}),"\n",(0,t.jsx)(l.h2,{id:"usage",children:"Usage"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-tsx",children:"import React from 'react';\nimport { Table, TableHead, TableBody, TableRow, TableCell } from '@lazy-panda-ui/lazy-panda-ui';\n\nfunction MyComponent() {\n  return (\n    <Table>\n      <TableHead>\n        <TableRow>\n          <TableCell>Name</TableCell>\n          <TableCell>Age</TableCell>\n          <TableCell>Location</TableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        <TableRow>\n          <TableCell>John Doe</TableCell>\n          <TableCell>28</TableCell>\n          <TableCell>New York</TableCell>\n        </TableRow>\n        <TableRow>\n          <TableCell>Jane Smith</TableCell>\n          <TableCell>32</TableCell>\n          <TableCell>London</TableCell>\n        </TableRow>\n      </TableBody>\n    </Table>\n  );\n}\n"})}),"\n",(0,t.jsx)(l.h2,{id:"props",children:"Props"}),"\n",(0,t.jsx)(l.h3,{id:"table-props",children:"Table Props"}),"\n",(0,t.jsxs)(l.table,{children:[(0,t.jsx)(l.thead,{children:(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.th,{children:"Name"}),(0,t.jsx)(l.th,{children:"Type"}),(0,t.jsx)(l.th,{children:"Default"}),(0,t.jsx)(l.th,{children:"Description"})]})}),(0,t.jsxs)(l.tbody,{children:[(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.td,{children:(0,t.jsx)(l.code,{children:"variant"})}),(0,t.jsx)(l.td,{children:(0,t.jsx)(l.code,{children:"'simple' | 'striped'"})}),(0,t.jsx)(l.td,{children:(0,t.jsx)(l.code,{children:"'simple'"})}),(0,t.jsx)(l.td,{children:"Visual variant"})]}),(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.td,{children:(0,t.jsx)(l.code,{children:"size"})}),(0,t.jsx)(l.td,{children:(0,t.jsx)(l.code,{children:"'sm' | 'md' | 'lg'"})}),(0,t.jsx)(l.td,{children:(0,t.jsx)(l.code,{children:"'md'"})}),(0,t.jsx)(l.td,{children:"Size of the table"})]}),(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.td,{children:(0,t.jsx)(l.code,{children:"bordered"})}),(0,t.jsx)(l.td,{children:(0,t.jsx)(l.code,{children:"boolean"})}),(0,t.jsx)(l.td,{children:(0,t.jsx)(l.code,{children:"false"})}),(0,t.jsx)(l.td,{children:"Show borders"})]}),(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.td,{children:(0,t.jsx)(l.code,{children:"hoverable"})}),(0,t.jsx)(l.td,{children:(0,t.jsx)(l.code,{children:"boolean"})}),(0,t.jsx)(l.td,{children:(0,t.jsx)(l.code,{children:"false"})}),(0,t.jsx)(l.td,{children:"Hover effect on rows"})]}),(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.td,{children:(0,t.jsx)(l.code,{children:"compact"})}),(0,t.jsx)(l.td,{children:(0,t.jsx)(l.code,{children:"boolean"})}),(0,t.jsx)(l.td,{children:(0,t.jsx)(l.code,{children:"false"})}),(0,t.jsx)(l.td,{children:"Reduce padding"})]})]})]}),"\n",(0,t.jsx)(l.h3,{id:"tablecell-props",children:"TableCell Props"}),"\n",(0,t.jsxs)(l.table,{children:[(0,t.jsx)(l.thead,{children:(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.th,{children:"Name"}),(0,t.jsx)(l.th,{children:"Type"}),(0,t.jsx)(l.th,{children:"Default"}),(0,t.jsx)(l.th,{children:"Description"})]})}),(0,t.jsxs)(l.tbody,{children:[(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.td,{children:(0,t.jsx)(l.code,{children:"align"})}),(0,t.jsx)(l.td,{children:(0,t.jsx)(l.code,{children:"'left' | 'center' | 'right'"})}),(0,t.jsx)(l.td,{children:(0,t.jsx)(l.code,{children:"'left'"})}),(0,t.jsx)(l.td,{children:"Text alignment"})]}),(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.td,{children:(0,t.jsx)(l.code,{children:"width"})}),(0,t.jsx)(l.td,{children:(0,t.jsx)(l.code,{children:"string | number"})}),(0,t.jsx)(l.td,{children:"-"}),(0,t.jsx)(l.td,{children:"Cell width"})]}),(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.td,{children:(0,t.jsx)(l.code,{children:"colSpan"})}),(0,t.jsx)(l.td,{children:(0,t.jsx)(l.code,{children:"number"})}),(0,t.jsx)(l.td,{children:"-"}),(0,t.jsx)(l.td,{children:"Number of columns to span"})]}),(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.td,{children:(0,t.jsx)(l.code,{children:"sortable"})}),(0,t.jsx)(l.td,{children:(0,t.jsx)(l.code,{children:"boolean"})}),(0,t.jsx)(l.td,{children:(0,t.jsx)(l.code,{children:"false"})}),(0,t.jsx)(l.td,{children:"Enable sorting"})]}),(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.td,{children:(0,t.jsx)(l.code,{children:"sortDirection"})}),(0,t.jsx)(l.td,{children:(0,t.jsx)(l.code,{children:"'asc' | 'desc'"})}),(0,t.jsx)(l.td,{children:"-"}),(0,t.jsx)(l.td,{children:"Sort direction"})]})]})]}),"\n",(0,t.jsx)(l.h2,{id:"examples",children:"Examples"}),"\n",(0,t.jsx)(l.h3,{id:"basic-table",children:"Basic Table"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-tsx",children:"<Table>\n  <TableHead>\n    <TableRow>\n      <TableCell>Product</TableCell>\n      <TableCell>Price</TableCell>\n      <TableCell>Status</TableCell>\n    </TableRow>\n  </TableHead>\n  <TableBody>\n    <TableRow>\n      <TableCell>Laptop</TableCell>\n      <TableCell>$999</TableCell>\n      <TableCell>In Stock</TableCell>\n    </TableRow>\n    <TableRow>\n      <TableCell>Phone</TableCell>\n      <TableCell>$699</TableCell>\n      <TableCell>Out of Stock</TableCell>\n    </TableRow>\n  </TableBody>\n</Table>\n"})}),"\n",(0,t.jsx)(l.h3,{id:"sortable-table",children:"Sortable Table"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-tsx",children:"function SortableExample() {\n  const [data, setData] = React.useState([\n    { name: 'John', age: 25, city: 'New York' },\n    { name: 'Jane', age: 30, city: 'London' },\n    { name: 'Bob', age: 28, city: 'Paris' },\n  ]);\n  const [sortConfig, setSortConfig] = React.useState({\n    key: null,\n    direction: 'asc',\n  });\n\n  const handleSort = (key) => {\n    const direction = \n      sortConfig.key === key && sortConfig.direction === 'asc'\n        ? 'desc'\n        : 'asc';\n    \n    setSortConfig({ key, direction });\n    \n    const sortedData = [...data].sort((a, b) => {\n      if (direction === 'asc') {\n        return a[key] > b[key] ? 1 : -1;\n      }\n      return a[key] < b[key] ? 1 : -1;\n    });\n    \n    setData(sortedData);\n  };\n\n  return (\n    <Table>\n      <TableHead>\n        <TableRow>\n          <TableCell \n            sortable \n            sortDirection={sortConfig.key === 'name' ? sortConfig.direction : null}\n            onClick={() => handleSort('name')}\n          >\n            Name\n          </TableCell>\n          <TableCell \n            sortable\n            sortDirection={sortConfig.key === 'age' ? sortConfig.direction : null}\n            onClick={() => handleSort('age')}\n          >\n            Age\n          </TableCell>\n          <TableCell \n            sortable\n            sortDirection={sortConfig.key === 'city' ? sortConfig.direction : null}\n            onClick={() => handleSort('city')}\n          >\n            City\n          </TableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {data.map((row) => (\n          <TableRow key={row.name}>\n            <TableCell>{row.name}</TableCell>\n            <TableCell>{row.age}</TableCell>\n            <TableCell>{row.city}</TableCell>\n          </TableRow>\n        ))}\n      </TableBody>\n    </Table>\n  );\n}\n"})}),"\n",(0,t.jsx)(l.h3,{id:"with-selection",children:"With Selection"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-tsx",children:"function SelectionExample() {\n  const [selected, setSelected] = React.useState([]);\n\n  const handleSelect = (id) => {\n    setSelected((prev) =>\n      prev.includes(id)\n        ? prev.filter((item) => item !== id)\n        : [...prev, id]\n    );\n  };\n\n  const handleSelectAll = () => {\n    setSelected((prev) =>\n      prev.length === data.length ? [] : data.map((row) => row.id)\n    );\n  };\n\n  return (\n    <Table>\n      <TableHead>\n        <TableRow>\n          <TableCell>\n            <Checkbox\n              checked={selected.length === data.length}\n              indeterminate={selected.length > 0 && selected.length < data.length}\n              onChange={handleSelectAll}\n            />\n          </TableCell>\n          <TableCell>Name</TableCell>\n          <TableCell>Status</TableCell>\n          <TableCell>Role</TableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {data.map((row) => (\n          <TableRow key={row.id} selected={selected.includes(row.id)}>\n            <TableCell>\n              <Checkbox\n                checked={selected.includes(row.id)}\n                onChange={() => handleSelect(row.id)}\n              />\n            </TableCell>\n            <TableCell>{row.name}</TableCell>\n            <TableCell>{row.status}</TableCell>\n            <TableCell>{row.role}</TableCell>\n          </TableRow>\n        ))}\n      </TableBody>\n    </Table>\n  );\n}\n"})}),"\n",(0,t.jsx)(l.h3,{id:"with-pagination",children:"With Pagination"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-tsx",children:'function PaginationExample() {\n  const [page, setPage] = React.useState(1);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handlePageChange = (newPage) => {\n    setPage(newPage);\n  };\n\n  const handleRowsPerPageChange = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(1);\n  };\n\n  return (\n    <Stack spacing="md">\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>ID</TableCell>\n            <TableCell>Name</TableCell>\n            <TableCell>Email</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {data\n            .slice((page - 1) * rowsPerPage, page * rowsPerPage)\n            .map((row) => (\n              <TableRow key={row.id}>\n                <TableCell>{row.id}</TableCell>\n                <TableCell>{row.name}</TableCell>\n                <TableCell>{row.email}</TableCell>\n              </TableRow>\n            ))}\n        </TableBody>\n      </Table>\n      \n      <Pagination\n        total={Math.ceil(data.length / rowsPerPage)}\n        current={page}\n        onChange={handlePageChange}\n        rowsPerPage={rowsPerPage}\n        onRowsPerPageChange={handleRowsPerPageChange}\n      />\n    </Stack>\n  );\n}\n'})}),"\n",(0,t.jsx)(l.h3,{id:"custom-styling",children:"Custom Styling"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-tsx",children:"<Table\n  style={{\n    '--table-border-color': '#e2e8f0',\n    '--table-header-bg': '#f7fafc',\n    '--table-row-hover-bg': '#edf2f7',\n  }}\n>\n  <TableHead>\n    <TableRow>\n      <TableCell style={{ fontWeight: 'bold' }}>Name</TableCell>\n      <TableCell style={{ fontWeight: 'bold' }}>Email</TableCell>\n      <TableCell style={{ fontWeight: 'bold' }}>Actions</TableCell>\n    </TableRow>\n  </TableHead>\n  <TableBody>\n    <TableRow>\n      <TableCell>John Doe</TableCell>\n      <TableCell>john@example.com</TableCell>\n      <TableCell>\n        <Button size=\"sm\" variant=\"ghost\">Edit</Button>\n      </TableCell>\n    </TableRow>\n  </TableBody>\n</Table>\n"})}),"\n",(0,t.jsx)(l.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,t.jsxs)(l.ol,{children:["\n",(0,t.jsx)(l.li,{children:"Use clear column headers"}),"\n",(0,t.jsx)(l.li,{children:"Implement sorting for large datasets"}),"\n",(0,t.jsx)(l.li,{children:"Include pagination when needed"}),"\n",(0,t.jsx)(l.li,{children:"Handle empty states gracefully"}),"\n",(0,t.jsx)(l.li,{children:"Maintain consistent column widths"}),"\n",(0,t.jsx)(l.li,{children:"Consider mobile responsiveness"}),"\n",(0,t.jsx)(l.li,{children:"Use appropriate variants for context"}),"\n"]}),"\n",(0,t.jsx)(l.h2,{id:"api-reference",children:"API Reference"}),"\n",(0,t.jsx)(l.h3,{id:"tableprops",children:"TableProps"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-tsx",children:"interface TableProps {\n  variant?: 'simple' | 'striped';\n  size?: 'sm' | 'md' | 'lg';\n  bordered?: boolean;\n  hoverable?: boolean;\n  compact?: boolean;\n  className?: string;\n  style?: CSSProperties;\n}\n"})}),"\n",(0,t.jsx)(l.h3,{id:"theme-customization",children:"Theme Customization"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-tsx",children:"const theme = {\n  table: {\n    variants: {\n      simple: {\n        borderColor: '#e2e8f0',\n        headerBackground: '#f7fafc',\n      },\n      striped: {\n        borderColor: '#e2e8f0',\n        headerBackground: '#f7fafc',\n        stripedBackground: '#f7fafc',\n      },\n    },\n    sizes: {\n      sm: {\n        fontSize: '0.875rem',\n        padding: '0.5rem',\n      },\n      md: {\n        fontSize: '1rem',\n        padding: '0.75rem',\n      },\n      lg: {\n        fontSize: '1.125rem',\n        padding: '1rem',\n      },\n    },\n  },\n};\n"})}),"\n",(0,t.jsx)(l.h2,{id:"related-components",children:"Related Components"}),"\n",(0,t.jsxs)(l.ul,{children:["\n",(0,t.jsxs)(l.li,{children:[(0,t.jsx)(l.a,{href:"pagination",children:"Pagination"})," - For navigating large datasets"]}),"\n",(0,t.jsxs)(l.li,{children:[(0,t.jsx)(l.a,{href:"select",children:"Select"})," - For rows per page selection"]}),"\n",(0,t.jsxs)(l.li,{children:[(0,t.jsx)(l.a,{href:"checkbox",children:"Checkbox"})," - For row selection"]}),"\n",(0,t.jsxs)(l.li,{children:[(0,t.jsx)(l.a,{href:"data-grid",children:"DataGrid"})," - For more complex data scenarios"]}),"\n"]})]})}function h(e={}){const{wrapper:l}={...(0,s.R)(),...e.components};return l?(0,t.jsx)(l,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8453:(e,l,n)=>{n.d(l,{R:()=>d,x:()=>o});var a=n(6540);const t={},s=a.createContext(t);function d(e){const l=a.useContext(s);return a.useMemo(function(){return"function"==typeof e?e(l):{...l,...e}},[l,e])}function o(e){let l;return l=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:d(e.components),a.createElement(s.Provider,{value:l},e.children)}}}]);