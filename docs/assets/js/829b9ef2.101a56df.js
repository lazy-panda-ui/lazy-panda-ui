"use strict";(self.webpackChunktemp_docs=self.webpackChunktemp_docs||[]).push([[742],{4585:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>r,default:()=>h,frontMatter:()=>a,metadata:()=>l,toc:()=>t});const l=JSON.parse('{"id":"components/data-display/chip","title":"Chip","description":"The Chip component is used to represent small blocks of information, tags, choices, or actions that can be submitted or removed.","source":"@site/docs/components/data-display/chip.mdx","sourceDirName":"components/data-display","slug":"/components/data-display/chip","permalink":"/lazy-panda-ui/components/data-display/chip","draft":false,"unlisted":false,"editUrl":"https://github.com/lazy-panda-ui/lazy-panda-ui/tree/main/temp-docs/docs/components/data-display/chip.mdx","tags":[],"version":"current","sidebarPosition":13,"frontMatter":{"sidebar_position":13},"sidebar":"tutorialSidebar","previous":{"title":"Card","permalink":"/lazy-panda-ui/components/data-display/card"},"next":{"title":"Icon","permalink":"/lazy-panda-ui/components/data-display/icon"}}');var s=i(4848),c=i(8453);const a={sidebar_position:13},r="Chip",d={},t=[{value:"Import",id:"import",level:2},{value:"Usage",id:"usage",level:2},{value:"Props",id:"props",level:2},{value:"Examples",id:"examples",level:2},{value:"Basic Chips",id:"basic-chips",level:3},{value:"Chip Variants",id:"chip-variants",level:3},{value:"Chip Colors",id:"chip-colors",level:3},{value:"With Icons",id:"with-icons",level:3},{value:"With Avatar",id:"with-avatar",level:3},{value:"Interactive Chips",id:"interactive-chips",level:2},{value:"Clickable Chips",id:"clickable-chips",level:3},{value:"Deletable Chips",id:"deletable-chips",level:3},{value:"Customization",id:"customization",level:2},{value:"Custom Styles",id:"custom-styles",level:3},{value:"Custom Delete Icon",id:"custom-delete-icon",level:3},{value:"Shape Variation",id:"shape-variation",level:3},{value:"Array Management",id:"array-management",level:2},{value:"Chip Array",id:"chip-array",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"API Reference",id:"api-reference",level:2},{value:"Size Values",id:"size-values",level:3},{value:"Color Palette",id:"color-palette",level:3},{value:"Related Components",id:"related-components",level:2}];function o(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,c.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"chip",children:"Chip"})}),"\n",(0,s.jsx)(n.p,{children:"The Chip component is used to represent small blocks of information, tags, choices, or actions that can be submitted or removed."}),"\n",(0,s.jsx)(n.h2,{id:"import",children:"Import"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"import { Chip } from '@lazy-panda-ui/lazy-panda-ui';\n"})}),"\n",(0,s.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"import React from 'react';\nimport { Chip } from '@lazy-panda-ui/lazy-panda-ui';\n\nfunction MyComponent() {\n  return (\n    <Chip\n      label=\"Example Chip\"\n      onDelete={() => console.log('deleted')}\n    />\n  );\n}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"props",children:"Props"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Name"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Default"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"label"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"string | ReactNode"})}),(0,s.jsx)(n.td,{children:"-"}),(0,s.jsx)(n.td,{children:"Content of the chip"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"variant"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"'solid' | 'outlined' | 'soft'"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"'solid'"})}),(0,s.jsx)(n.td,{children:"Visual variant"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"color"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"'default' | 'primary' | 'secondary' | 'success' | 'warning' | 'error'"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"'default'"})}),(0,s.jsx)(n.td,{children:"Color scheme"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"size"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"'sm' | 'md' | 'lg'"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"'md'"})}),(0,s.jsx)(n.td,{children:"Size of the chip"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"avatar"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"ReactNode"})}),(0,s.jsx)(n.td,{children:"-"}),(0,s.jsx)(n.td,{children:"Avatar element"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"icon"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"ReactNode"})}),(0,s.jsx)(n.td,{children:"-"}),(0,s.jsx)(n.td,{children:"Icon element"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"disabled"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"boolean"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"false"})}),(0,s.jsx)(n.td,{children:"Whether chip is disabled"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"clickable"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"boolean"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"false"})}),(0,s.jsx)(n.td,{children:"Whether chip is clickable"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"deletable"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"boolean"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"false"})}),(0,s.jsx)(n.td,{children:"Whether chip is deletable"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"onDelete"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"() => void"})}),(0,s.jsx)(n.td,{children:"-"}),(0,s.jsx)(n.td,{children:"Delete callback"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"onClick"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"() => void"})}),(0,s.jsx)(n.td,{children:"-"}),(0,s.jsx)(n.td,{children:"Click callback"})]})]})]}),"\n",(0,s.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,s.jsx)(n.h3,{id:"basic-chips",children:"Basic Chips"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:'<Stack direction="row" spacing="sm">\n  <Chip label="Basic" />\n  <Chip label="Clickable" clickable />\n  <Chip label="Deletable" onDelete={() => {}} />\n  <Chip label="Disabled" disabled />\n</Stack>\n'})}),"\n",(0,s.jsx)(n.h3,{id:"chip-variants",children:"Chip Variants"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:'<Stack direction="row" spacing="sm">\n  <Chip variant="solid" label="Solid" />\n  <Chip variant="outlined" label="Outlined" />\n  <Chip variant="soft" label="Soft" />\n</Stack>\n'})}),"\n",(0,s.jsx)(n.h3,{id:"chip-colors",children:"Chip Colors"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:'<Stack direction="row" spacing="sm">\n  <Chip color="default" label="Default" />\n  <Chip color="primary" label="Primary" />\n  <Chip color="secondary" label="Secondary" />\n  <Chip color="success" label="Success" />\n  <Chip color="warning" label="Warning" />\n  <Chip color="error" label="Error" />\n</Stack>\n'})}),"\n",(0,s.jsx)(n.h3,{id:"with-icons",children:"With Icons"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:'<Stack direction="row" spacing="sm">\n  <Chip\n    icon={<Icon name="user" />}\n    label="With Icon"\n  />\n  <Chip\n    icon={<Icon name="star" />}\n    label="Favorite"\n    color="primary"\n  />\n  <Chip\n    icon={<Icon name="check" />}\n    label="Completed"\n    color="success"\n  />\n</Stack>\n'})}),"\n",(0,s.jsx)(n.h3,{id:"with-avatar",children:"With Avatar"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:'<Stack direction="row" spacing="sm">\n  <Chip\n    avatar={<Avatar src="/user1.jpg" size="sm" />}\n    label="John Doe"\n  />\n  <Chip\n    avatar={<Avatar name="JD" size="sm" />}\n    label="Jane Doe"\n    color="primary"\n  />\n</Stack>\n'})}),"\n",(0,s.jsx)(n.h2,{id:"interactive-chips",children:"Interactive Chips"}),"\n",(0,s.jsx)(n.h3,{id:"clickable-chips",children:"Clickable Chips"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:'<Stack direction="row" spacing="sm">\n  <Chip\n    label="Click me"\n    clickable\n    onClick={() => console.log(\'clicked\')}\n  />\n  <Chip\n    label="Select"\n    clickable\n    selected\n    color="primary"\n  />\n</Stack>\n'})}),"\n",(0,s.jsx)(n.h3,{id:"deletable-chips",children:"Deletable Chips"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:'<Stack direction="row" spacing="sm">\n  <Chip\n    label="Delete me"\n    onDelete={() => console.log(\'deleted\')}\n  />\n  <Chip\n    label="Custom delete"\n    onDelete={() => {}}\n    deleteIcon={<Icon name="close" />}\n  />\n</Stack>\n'})}),"\n",(0,s.jsx)(n.h2,{id:"customization",children:"Customization"}),"\n",(0,s.jsx)(n.h3,{id:"custom-styles",children:"Custom Styles"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"<Chip\n  label=\"Custom\"\n  style={{\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n    color: 'white',\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n  }}\n/>\n"})}),"\n",(0,s.jsx)(n.h3,{id:"custom-delete-icon",children:"Custom Delete Icon"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:'<Chip\n  label="Custom Delete"\n  onDelete={() => {}}\n  deleteIcon={\n    <Icon\n      name="trash"\n      color="error"\n      size="sm"\n    />\n  }\n/>\n'})}),"\n",(0,s.jsx)(n.h3,{id:"shape-variation",children:"Shape Variation"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:'<Stack direction="row" spacing="sm">\n  <Chip\n    label="Rounded"\n    style={{ borderRadius: \'16px\' }}\n  />\n  <Chip\n    label="Square"\n    style={{ borderRadius: \'4px\' }}\n  />\n</Stack>\n'})}),"\n",(0,s.jsx)(n.h2,{id:"array-management",children:"Array Management"}),"\n",(0,s.jsx)(n.h3,{id:"chip-array",children:"Chip Array"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"function ChipArray() {\n  const [chips, setChips] = React.useState([\n    'React', 'TypeScript', 'JavaScript'\n  ]);\n\n  const handleDelete = (chipToDelete: string) => {\n    setChips(chips.filter(chip => chip !== chipToDelete));\n  };\n\n  return (\n    <Stack direction=\"row\" spacing=\"sm\">\n      {chips.map(chip => (\n        <Chip\n          key={chip}\n          label={chip}\n          onDelete={() => handleDelete(chip)}\n        />\n      ))}\n    </Stack>\n  );\n}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Use clear and concise labels"}),"\n",(0,s.jsx)(n.li,{children:"Maintain consistent spacing"}),"\n",(0,s.jsx)(n.li,{children:"Choose appropriate colors"}),"\n",(0,s.jsx)(n.li,{children:"Handle interactions gracefully"}),"\n",(0,s.jsx)(n.li,{children:"Consider mobile touch targets"}),"\n",(0,s.jsx)(n.li,{children:"Provide visual feedback"}),"\n",(0,s.jsx)(n.li,{children:"Keep delete actions reversible"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"api-reference",children:"API Reference"}),"\n",(0,s.jsx)(n.h3,{id:"size-values",children:"Size Values"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"const chipSizes = {\n  sm: {\n    height: 24,\n    fontSize: 12,\n    padding: '0 8px',\n  },\n  md: {\n    height: 32,\n    fontSize: 14,\n    padding: '0 12px',\n  },\n  lg: {\n    height: 40,\n    fontSize: 16,\n    padding: '0 16px',\n  },\n};\n"})}),"\n",(0,s.jsx)(n.h3,{id:"color-palette",children:"Color Palette"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"const chipColors = {\n  default: {\n    background: '#E0E0E0',\n    color: '#000000',\n  },\n  primary: {\n    background: '#1976D2',\n    color: '#FFFFFF',\n  },\n  // ... other colors\n};\n"})}),"\n",(0,s.jsx)(n.h2,{id:"related-components",children:"Related Components"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"badge",children:"Badge"})," - For status indicators"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"tag",children:"Tag"})," - For simpler labeling"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"button",children:"Button"})," - For primary actions"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"avatar",children:"Avatar"})," - For user representation in chips"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>r});var l=i(6540);const s={},c=l.createContext(s);function a(e){const n=l.useContext(c);return l.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),l.createElement(c.Provider,{value:n},e.children)}}}]);