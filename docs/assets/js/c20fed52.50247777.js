"use strict";(self.webpackChunktemp_docs=self.webpackChunktemp_docs||[]).push([[1680],{4154:(e,n,d)=>{d.r(n),d.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>s,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"components/card","title":"Card","description":"The Card component is a flexible container for displaying content and actions in a single topic. It supports various visual styles, loading states, and interactive behaviors.","source":"@site/docs/components/card.mdx","sourceDirName":"components","slug":"/components/card","permalink":"/lazy-panda-ui/components/card","draft":false,"unlisted":false,"editUrl":"https://github.com/lazy-panda-ui/lazy-panda-ui/tree/main/temp-docs/docs/components/card.mdx","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"ButtonGroup","permalink":"/lazy-panda-ui/components/button-group"},"next":{"title":"Chip","permalink":"/lazy-panda-ui/components/chip"}}');var t=d(4848),i=d(8453);const s={},a="Card",l={},c=[{value:"Import",id:"import",level:2},{value:"Usage",id:"usage",level:2},{value:"Basic Card",id:"basic-card",level:3},{value:"Different Variants",id:"different-variants",level:3},{value:"Interactive Card",id:"interactive-card",level:3},{value:"Loading State",id:"loading-state",level:3},{value:"Different Sizes",id:"different-sizes",level:3},{value:"Custom Loading Component",id:"custom-loading-component",level:3},{value:"Props",id:"props",level:2},{value:"Main Props",id:"main-props",level:3},{value:"Style Props",id:"style-props",level:3},{value:"Custom Components",id:"custom-components",level:3},{value:"Accessibility Props",id:"accessibility-props",level:3},{value:"Theme Customization",id:"theme-customization",level:2}];function o(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"card",children:"Card"})}),"\n",(0,t.jsx)(n.p,{children:"The Card component is a flexible container for displaying content and actions in a single topic. It supports various visual styles, loading states, and interactive behaviors."}),"\n",(0,t.jsx)(n.h2,{id:"import",children:"Import"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"import { Card } from '@lazy-panda-ui/lazy-panda-ui';\n"})}),"\n",(0,t.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,t.jsx)(n.h3,{id:"basic-card",children:"Basic Card"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"import { Card } from '@lazy-panda-ui/lazy-panda-ui';\n\nfunction Example() {\n  return (\n    <Card>\n      <Text>Basic card content</Text>\n    </Card>\n  );\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"different-variants",children:"Different Variants"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:'import { Card } from \'@lazy-panda-ui/lazy-panda-ui\';\n\nfunction Example() {\n  return (\n    <>\n      <Card variant="elevated">\n        <Text>Elevated card with shadow</Text>\n      </Card>\n\n      <Card variant="outlined">\n        <Text>Outlined card with border</Text>\n      </Card>\n\n      <Card variant="filled">\n        <Text>Filled card with background</Text>\n      </Card>\n\n      <Card variant="tonal">\n        <Text>Tonal card with themed background</Text>\n      </Card>\n    </>\n  );\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"interactive-card",children:"Interactive Card"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"import { Card } from '@lazy-panda-ui/lazy-panda-ui';\n\nfunction Example() {\n  const handlePress = () => {\n    console.log('Card pressed');\n  };\n\n  return (\n    <Card\n      onPress={handlePress}\n      variant=\"elevated\"\n      elevation={3}\n    >\n      <Text>Press me!</Text>\n    </Card>\n  );\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"loading-state",children:"Loading State"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"import { Card } from '@lazy-panda-ui/lazy-panda-ui';\n\nfunction Example() {\n  return (\n    <Card loading>\n      <Text>This content is loading...</Text>\n    </Card>\n  );\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"different-sizes",children:"Different Sizes"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:'import { Card } from \'@lazy-panda-ui/lazy-panda-ui\';\n\nfunction Example() {\n  return (\n    <>\n      <Card size="small">\n        <Text>Small card</Text>\n      </Card>\n\n      <Card size="medium">\n        <Text>Medium card</Text>\n      </Card>\n\n      <Card size="large">\n        <Text>Large card</Text>\n      </Card>\n    </>\n  );\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"custom-loading-component",children:"Custom Loading Component"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"import { Card } from '@lazy-panda-ui/lazy-panda-ui';\n\nfunction Example() {\n  return (\n    <Card\n      loading\n      LoadingComponent={<CustomSpinner />}\n    >\n      <Text>Content with custom loader</Text>\n    </Card>\n  );\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"props",children:"Props"}),"\n",(0,t.jsx)(n.h3,{id:"main-props",children:"Main Props"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Prop"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Default"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"children"})}),(0,t.jsx)(n.td,{children:"React.ReactNode"}),(0,t.jsx)(n.td,{children:"Required"}),(0,t.jsx)(n.td,{children:"Content to be rendered inside the card"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"variant"})}),(0,t.jsx)(n.td,{children:"'elevated' | 'outlined' | 'filled' | 'tonal'"}),(0,t.jsx)(n.td,{children:"'elevated'"}),(0,t.jsx)(n.td,{children:"Visual variant of the card"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"size"})}),(0,t.jsx)(n.td,{children:"'small' | 'medium' | 'large'"}),(0,t.jsx)(n.td,{children:"'medium'"}),(0,t.jsx)(n.td,{children:"Size of the card that determines padding"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"elevation"})}),(0,t.jsx)(n.td,{children:"number"}),(0,t.jsx)(n.td,{children:"2"}),(0,t.jsx)(n.td,{children:"Elevation level for shadow (only applies to 'elevated' variant)"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"disabled"})}),(0,t.jsx)(n.td,{children:"boolean"}),(0,t.jsx)(n.td,{children:"false"}),(0,t.jsx)(n.td,{children:"Whether the card is disabled"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"loading"})}),(0,t.jsx)(n.td,{children:"boolean"}),(0,t.jsx)(n.td,{children:"false"}),(0,t.jsx)(n.td,{children:"Whether to show a loading indicator"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"onPress"})}),(0,t.jsx)(n.td,{children:"() => void"}),(0,t.jsx)(n.td,{children:"-"}),(0,t.jsx)(n.td,{children:"Called when the card is pressed"})]})]})]}),"\n",(0,t.jsx)(n.h3,{id:"style-props",children:"Style Props"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Prop"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"containerStyle"})}),(0,t.jsx)(n.td,{children:"ViewStyle"}),(0,t.jsx)(n.td,{children:"Additional styles for the container"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"contentStyle"})}),(0,t.jsx)(n.td,{children:"ViewStyle"}),(0,t.jsx)(n.td,{children:"Additional styles for the content wrapper"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"loadingOverlayStyle"})}),(0,t.jsx)(n.td,{children:"ViewStyle"}),(0,t.jsx)(n.td,{children:"Additional styles for the loading overlay"})]})]})]}),"\n",(0,t.jsx)(n.h3,{id:"custom-components",children:"Custom Components"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Prop"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsx)(n.tbody,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"LoadingComponent"})}),(0,t.jsx)(n.td,{children:"React.ReactNode"}),(0,t.jsx)(n.td,{children:"Custom loading indicator component"})]})})]}),"\n",(0,t.jsx)(n.h3,{id:"accessibility-props",children:"Accessibility Props"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Prop"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"accessibilityRole"})}),(0,t.jsx)(n.td,{children:"AccessibilityRole"}),(0,t.jsx)(n.td,{children:"Role for screen readers"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"accessibilityLabel"})}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:"Accessibility label"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"accessibilityHint"})}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:"Additional description for screen readers"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"testID"})}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:"Test ID for testing"})]})]})]}),"\n",(0,t.jsx)(n.h2,{id:"theme-customization",children:"Theme Customization"}),"\n",(0,t.jsxs)(n.p,{children:["Customize Card via ",(0,t.jsx)(n.code,{children:"theme.card"})," tokens using ",(0,t.jsx)(n.code,{children:"ThemeProvider"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"import { ThemeProvider, createTheme, defaultTheme } from '@lazy-panda-ui/lazy-panda-ui/theme';\n\nconst theme = createTheme(defaultTheme, {\n  card: {\n    sizes: { medium: { padding: 20 } },\n    borderRadius: 10,\n    disabledOpacity: 0.5,\n    variants: {\n      elevated: {\n        backgroundColor: defaultTheme.colors.surface,\n        shadow: { ...defaultTheme.card.variants.elevated.shadow, elevation: 4, radius: 6 },\n      },\n      outlined: { backgroundColor: '#fff', borderWidth: 1, borderColor: '#E5E5EA' },\n      filled: { backgroundColor: defaultTheme.colors.surfaceVariant },\n      tonal: { backgroundColor: defaultTheme.colors.primaryContainer },\n    },\n    loadingOverlay: { opacity: 0.75, backgroundColor: defaultTheme.colors.surface },\n    ripple: { color: defaultTheme.colors.onSurface },\n  },\n});\n\nexport function App() {\n  return (\n    <ThemeProvider theme={theme}>\n      {/* your app */}\n    </ThemeProvider>\n  );\n}\n"})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(o,{...e})}):o(e)}},8453:(e,n,d)=>{d.d(n,{R:()=>s,x:()=>a});var r=d(6540);const t={},i=r.createContext(t);function s(e){const n=r.useContext(i);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);